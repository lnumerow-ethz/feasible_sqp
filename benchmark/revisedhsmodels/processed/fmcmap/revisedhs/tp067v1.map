fmcTitle("tp067v1"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
ivx4 := 3048.289708675017:
ivx5 := 89.19762025827802:
fmcInitialValue('x_1', 1745):
fmcStrongLowerBound('x_1', 10^(-5)):
fmcStrongUpperBound('x_1', 2000):
fmcInitialValue('x_2', 12000):
fmcStrongLowerBound('x_2', 10^(-5)):
fmcStrongUpperBound('x_2', 16000):
fmcInitialValue('x_3', 110):
fmcStrongLowerBound('x_3', 10^(-5)):
fmcStrongUpperBound('x_3', 120):
fmcInitialValue('x_4', ivx4):
fmcInitialValue('x_5', ivx5):
y2 := x_4:
y3 := 1.22*y2 - x_1:
y6 := (x_2 + y3)/x_1:
y2c := 0.01*x_1*(112 + 13.167*y6 - 0.6667*y6^2):
y4 := x_5:
y5 := 86.35 + 1.098*y6 - 0.038*y6^2 + 0.325*(y4 - 89):
y8 := 3*y5 - 133:
y7 := 35.82 - 0.222*y8:
y4c := 98000*x_3/(y2*y7 + 1000*x_3):
c_1 := y2c - y2:
c_2 := y4c - y4:
c_3 := y2 - 0:
c_4 := y3 - 0:
c_5 := y4 - 85:
c_6 := y5 - 90:
c_7 := y6 - 3:
c_8 := y7 - 1/100:
c_9 := y8 - 145:
c_10 := 5000 - y2:
c_11 := 2000 - y3:
c_12 := 93 - y4:
c_13 := 95 - y5:
c_14 := 12 - y6:
c_15 := 4 - y7:
c_16 := 162 - y8:
mf := -(0.063*y2*y5 - 5.04*x_1 - 3.36*y3 - 0.035*x_2 - 10*x_3):
myminfun := mf:
myabsdevnod0_0 := myownabs(myminfun + 1162.02698005969):
myreldevnod0_0 := myownabs(myminfun/1162.02698005969 + 1):
myabsdevnod0_1 := myownabs(x_1 - 1728.371443241086):
myreldevnod0_1 := myownabs(x_1/1728.371443241086 - 1):
myabsdevnod0_2 := myownabs(x_2 - 16000):
myreldevnod0_2 := myownabs(x_2/16000 - 1):
myabsdevnod0_3 := myownabs(x_3 - 98.13617652300942):
myreldevnod0_3 := myownabs(x_3/98.13617652300942 - 1):
myabsdevnod0_4 := myownabs(x_4 - 3056.042166591054):
myreldevnod0_4 := myownabs(x_4/3056.042166591054 - 1):
myabsdevnod0_5 := myownabs(x_5 - 90.61853974698703):
myreldevnod0_5 := myownabs(x_5/90.61853974698703 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := (1/2)*(myownabs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5)):
myreldevnod1_4 := (1/2)*(myownabs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5)):
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := myabsdevnod1_4:
myreldevnod2_4 := myreldevnod1_4:
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
zmyabsdevmax := myabsdevnod3_0:
zmyreldevmax := myreldevnod3_0:
obj := myminfun:
fmcMinimum(obj):
fmcEquality('ce_1', c_1):
fmcEquality('ce_2', c_2):
fmcInequality('ci_1', c_3):
fmcInequality('ci_2', c_4):
fmcInequality('ci_3', c_5):
fmcInequality('ci_4', c_6):
fmcInequality('ci_5', c_7):
fmcInequality('ci_6', c_8):
fmcInequality('ci_7', c_9):
fmcInequality('ci_8', c_10):
fmcInequality('ci_9', c_11):
fmcInequality('ci_10', c_12):
fmcInequality('ci_11', c_13):
fmcInequality('ci_12', c_14):
fmcInequality('ci_13', c_15):
fmcInequality('ci_14', c_16):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('x_5', x_5):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
