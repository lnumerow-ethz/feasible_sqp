fmcTitle("tp056r"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
mypi := 4*atan(1):
c7 := 7:
c42 := 42:
c72 := 72:
a := asin(sqrt(10/c42)):
b := asin(sqrt(50/c72)):
c := asin(sqrt(4/c7)):
d := asin(sqrt(2/c7)):
e := mypi/2:
eps := 10^(-6):
fmcInitialValue('x_1', 1):
fmcInitialValue('x_2', 1):
fmcInitialValue('x_3', 1):
fmcInitialValue('x_4', a):
fmcStrongLowerBound('x_4', eps):
fmcStrongUpperBound('x_4', e):
fmcInitialValue('x_5', a):
fmcStrongLowerBound('x_5', eps):
fmcStrongUpperBound('x_5', e):
fmcInitialValue('x_6', a):
fmcStrongLowerBound('x_6', eps):
fmcStrongUpperBound('x_6', e):
fmcInitialValue('x_7', b):
fmcStrongLowerBound('x_7', eps):
fmcStrongUpperBound('x_7', e):
myminfun := (-1)*x_1*x_2*x_3:
myabsdevnod0_0 := myownabs(myminfun + 3.456):
myreldevnod0_0 := myownabs(myminfun/3.456 + 1):
myabsdevnod0_1 := myownabs(x_1 - 2.4):
myreldevnod0_1 := myownabs(x_1/2.4 - 1):
myabsdevnod0_2 := myownabs(x_2 - 1.2):
myreldevnod0_2 := myownabs(x_2/1.2 - 1):
myabsdevnod0_3 := myownabs(x_3 - 1.2):
myreldevnod0_3 := myownabs(x_3/1.2 - 1):
myabsdevnod0_4 := myownabs(x_4 - 0.857071947850131):
myreldevnod0_4 := myownabs(x_4/0.857071947850131 - 1):
myabsdevnod0_5 := myownabs(x_5 - 0.5639426413606288):
myreldevnod0_5 := myownabs(x_5/0.5639426413606288 - 1):
myabsdevnod0_6 := myownabs(x_6 - 0.5639426413606288):
myreldevnod0_6 := myownabs(x_6/0.5639426413606288 - 1):
myabsdevnod0_7 := myownabs(x_7 - 1.570796326794897):
myreldevnod0_7 := myownabs(x_7/1.570796326794897 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := (1/2)*(myownabs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5)):
myreldevnod1_4 := (1/2)*(myownabs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5)):
myabsdevnod1_6 := (1/2)*(myownabs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7)):
myreldevnod1_6 := (1/2)*(myownabs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7)):
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := (1/2)*(myownabs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6)):
myreldevnod2_4 := (1/2)*(myownabs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6)):
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
zmyabsdevmax := myabsdevnod3_0:
zmyreldevmax := myreldevnod3_0:
obj := myminfun:
fmcMinimum(obj):
fmcEquality('ce_1', x_1 - 4.2*sin(x_4)^2):
fmcEquality('ce_2', x_2 - 4.2*sin(x_5)^2):
fmcEquality('ce_3', x_3 - 4.2*sin(x_6)^2):
fmcEquality('ce_4', x_1 + 2*x_2 + 2*x_3 - 7.2*sin(x_7)^2):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('x_5', x_5):
fmcEscortFloat('x_6', x_6):
fmcEscortFloat('x_7', x_7):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
