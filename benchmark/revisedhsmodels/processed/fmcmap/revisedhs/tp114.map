fmcTitle("tp114"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
a := .99:
b := .9:
fmcInitialValue('x_1', 1745):
fmcStrongLowerBound('x_1', .00001):
fmcStrongUpperBound('x_1', 2000):
fmcInitialValue('x_2', 12000):
fmcStrongLowerBound('x_2', .00001):
fmcStrongUpperBound('x_2', 16000):
fmcInitialValue('x_3', 110):
fmcStrongLowerBound('x_3', .00001):
fmcStrongUpperBound('x_3', 120):
fmcInitialValue('x_4', 3048):
fmcStrongLowerBound('x_4', .00001):
fmcStrongUpperBound('x_4', 5000):
fmcInitialValue('x_5', 1974):
fmcStrongLowerBound('x_5', .00001):
fmcStrongUpperBound('x_5', 2000):
fmcInitialValue('x_6', 89.2):
fmcStrongLowerBound('x_6', 85):
fmcStrongUpperBound('x_6', 93):
fmcInitialValue('x_7', 92.8):
fmcStrongLowerBound('x_7', 90):
fmcStrongUpperBound('x_7', 95):
fmcInitialValue('x_8', 8):
fmcStrongLowerBound('x_8', 3):
fmcStrongUpperBound('x_8', 12):
fmcInitialValue('x_9', 3.6):
fmcStrongLowerBound('x_9', 1.2):
fmcStrongUpperBound('x_9', 4):
fmcInitialValue('x_10', 145):
fmcStrongLowerBound('x_10', 145):
fmcStrongUpperBound('x_10', 162):
g_1 := 35.82 - .222*x_10 - b*x_9:
g_2 := (-133) + 3*x_7 - a*x_10:
g_3 := (-1)*g_1 + x_9*(1/b - b):
g_4 := (-1)*g_2 + (1/a - a)*x_10:
g_5 := 1.12*x_1 + .13167*x_1*x_8 - .00667*x_1*x_8^2 - a*x_4:
g_6 := 57.425 + 1.098*x_8 - .038*x_8^2 + .325*x_6 - a*x_7:
g_7 := (-1)*g_5 + (1/a - a)*x_4:
g_8 := (-1)*g_6 + (1/a - a)*x_7:
g_9 := 1.22*x_4 - x_1 - x_5:
g_10 := 98000*x_3/(x_4*x_9 + 1000*x_3) - x_6:
g_11 := (x_2 + x_5)/x_1 - x_8:
mf := 5.04*x_1 + .035*x_2 + 10*x_3 + 3.36*x_5 - .063*x_4*x_7:
myminfun := mf:
myabsdevnod0_0 := myownabs(myminfun + 1768.806963716244):
myreldevnod0_0 := myownabs(myminfun/1768.806963716244 + 1):
myabsdevnod0_1 := myownabs(x_1 - 1698.094765188968):
myreldevnod0_1 := myownabs(x_1/1698.094765188968 - 1):
myabsdevnod0_2 := myownabs(x_2 - 15818.61492418296):
myreldevnod0_2 := myownabs(x_2/15818.61492418296 - 1):
myabsdevnod0_3 := myownabs(x_3 - 54.10268233324735):
myreldevnod0_3 := myownabs(x_3/54.10268233324735 - 1):
myabsdevnod0_4 := myownabs(x_4 - 3031.225217368007):
myreldevnod0_4 := myownabs(x_4/3031.225217368007 - 1):
myabsdevnod0_5 := myownabs(x_5 - 2000):
myreldevnod0_5 := myownabs(x_5/2000 - 1):
myabsdevnod0_6 := myownabs(x_6 - 90.11542219898668):
myreldevnod0_6 := myownabs(x_6/90.11542219898668 - 1):
myabsdevnod0_7 := myownabs(x_7 - 95):
myreldevnod0_7 := myownabs(x_7/95 - 1):
myabsdevnod0_8 := myownabs(x_8 - 10.49329830670555):
myreldevnod0_8 := myownabs(x_8/10.49329830670555 - 1):
myabsdevnod0_9 := myownabs(x_9 - 1.561636363636364):
myreldevnod0_9 := myownabs(x_9/1.561636363636364 - 1):
myabsdevnod0_10 := myownabs(x_10 - 153.5353535353535):
myreldevnod0_10 := myownabs(x_10/153.5353535353535 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := (1/2)*(myownabs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5)):
myreldevnod1_4 := (1/2)*(myownabs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5)):
myabsdevnod1_6 := (1/2)*(myownabs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7)):
myreldevnod1_6 := (1/2)*(myownabs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7)):
myabsdevnod1_8 := (1/2)*(myownabs(myabsdevnod0_8 - myabsdevnod0_9) + (myabsdevnod0_8 + myabsdevnod0_9)):
myreldevnod1_8 := (1/2)*(myownabs(myreldevnod0_8 - myreldevnod0_9) + (myreldevnod0_8 + myreldevnod0_9)):
myabsdevnod1_10 := myabsdevnod0_10:
myreldevnod1_10 := myreldevnod0_10:
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := (1/2)*(myownabs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6)):
myreldevnod2_4 := (1/2)*(myownabs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6)):
myabsdevnod2_8 := (1/2)*(myownabs(myabsdevnod1_8 - myabsdevnod1_10) + (myabsdevnod1_8 + myabsdevnod1_10)):
myreldevnod2_8 := (1/2)*(myownabs(myreldevnod1_8 - myreldevnod1_10) + (myreldevnod1_8 + myreldevnod1_10)):
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
myabsdevnod3_8 := myabsdevnod2_8:
myreldevnod3_8 := myreldevnod2_8:
myabsdevnod4_0 := (1/2)*(myownabs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8)):
myreldevnod4_0 := (1/2)*(myownabs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8)):
zmyabsdevmax := myabsdevnod4_0:
zmyreldevmax := myreldevnod4_0:
obj := myminfun:
fmcMinimum(obj):
fmcEquality('ce_1', g_9):
fmcEquality('ce_2', g_10):
fmcEquality('ce_3', g_11):
fmcInequality('ci_1', g_1):
fmcInequality('ci_2', g_2):
fmcInequality('ci_3', g_3):
fmcInequality('ci_4', g_4):
fmcInequality('ci_5', g_5):
fmcInequality('ci_6', g_6):
fmcInequality('ci_7', g_7):
fmcInequality('ci_8', g_8):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('x_5', x_5):
fmcEscortFloat('x_6', x_6):
fmcEscortFloat('x_7', x_7):
fmcEscortFloat('x_8', x_8):
fmcEscortFloat('x_9', x_9):
fmcEscortFloat('x_10', x_10):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
