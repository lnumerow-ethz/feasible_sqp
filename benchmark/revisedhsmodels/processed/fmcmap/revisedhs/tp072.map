fmcTitle("tp072"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
a11 := 4:
a12 := 2.25:
a13 := 1:
a14 := 0.25:
a21 := 0.16:
a22 := 0.36:
a23 := 0.64:
a24 := 0.64:
b1 := 0.0401:
b2 := 0.010085:
fmcInitialValue('x_1', 1):
fmcStrongLowerBound('x_1', 0.001):
fmcStrongUpperBound('x_1', 400000):
fmcInitialValue('x_2', 1):
fmcStrongLowerBound('x_2', 0.001):
fmcStrongUpperBound('x_2', 300000):
fmcInitialValue('x_3', 1):
fmcStrongLowerBound('x_3', 0.001):
fmcStrongUpperBound('x_3', 200000):
fmcInitialValue('x_4', 1):
fmcStrongLowerBound('x_4', 0.001):
fmcStrongUpperBound('x_4', 100000):
myminfun := 1 + x_1 + x_2 + x_3 + x_4:
myabsdevnod0_0 := myownabs(myminfun - 727.679357789613):
myreldevnod0_0 := myownabs(myminfun/727.679357789613 - 1):
myabsdevnod0_1 := myownabs(x_1 - 193.4074272719463):
myreldevnod0_1 := myownabs(x_1/193.4074272719463 - 1):
myabsdevnod0_2 := myownabs(x_2 - 179.5470760322745):
myreldevnod0_2 := myownabs(x_2/179.5470760322745 - 1):
myabsdevnod0_3 := myownabs(x_3 - 185.0180633581515):
myreldevnod0_3 := myownabs(x_3/185.0180633581515 - 1):
myabsdevnod0_4 := myownabs(x_4 - 168.7067911272406):
myreldevnod0_4 := myownabs(x_4/168.7067911272406 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := myabsdevnod0_4:
myreldevnod1_4 := myreldevnod0_4:
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := myabsdevnod1_4:
myreldevnod2_4 := myreldevnod1_4:
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
zmyabsdevmax := myabsdevnod3_0:
zmyreldevmax := myreldevnod3_0:
obj := myminfun:
fmcMinimum(obj):
fmcInequality('ci_1', b1 - a11/x_1 - a12/x_2 - a13/x_3 - a14/x_4):
fmcInequality('ci_2', b2 - a21/x_1 - a22/x_2 - a23/x_3 - a24/x_4):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
