fmcTitle("tp113"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
fmcInitialValue('x_1', 2):
fmcInitialValue('x_2', 3):
fmcInitialValue('x_3', 5):
fmcInitialValue('x_4', 5):
fmcInitialValue('x_5', 1):
fmcInitialValue('x_6', 2):
fmcInitialValue('x_7', 7):
fmcInitialValue('x_8', 3):
fmcInitialValue('x_9', 6):
fmcInitialValue('x_10', 10):
c_1 := 105 - 4*x_1 - 5*x_2 + 3*x_7 - 9*x_8:
c_2 := (-1)*10*x_1 + 8*x_2 + 17*x_7 - 2*x_8:
c_3 := 8*x_1 - 2*x_2 - 5*x_9 + 2*x_10 + 12:
c_4 := (-3)*(x_1 - 2)^2 - 4*(x_2 - 3)^2 - 2*x_3^2 + 7*x_4 + 120:
c_5 := (-5)*x_1^2 - 8*x_2 - (x_3 - 6)^2 + 2*x_4 + 40:
c_6 := (-1/2)*(x_1 - 8)^2 - 2*(x_2 - 4)^2 - 3*x_5^2 + x_6 + 30:
c_7 := (-1)*x_1^2 - 2*(x_2 - 2)^2 + 2*x_1*x_2 - 14*x_5 + 6*x_6:
c_8 := 3*x_1 - 6*x_2 - 12*(x_9 - 8)^2 + 7*x_10:
mf := x_1^2 + x_2^2 + x_1*x_2 - 14*x_1 - 16*x_2 + (x_3 - 10)^2 + 4*(x_4 - 5)^2 + (x_5 - 3)^2 + 2*(x_6 - 1)^2
+ 5*x_7^2 + 7*(x_8 - 11)^2 + 2*(x_9 - 10)^2 + (x_10 - 7)^2 + 45:
myminfun := mf:
myabsdevnod0_0 := myownabs(myminfun - 24.30620906817981):
myreldevnod0_0 := myownabs(myminfun/24.30620906817981 - 1):
myabsdevnod0_1 := myownabs(x_1 - 2.171996371255455):
myreldevnod0_1 := myownabs(x_1/2.171996371255455 - 1):
myabsdevnod0_2 := myownabs(x_2 - 2.36368297369728):
myreldevnod0_2 := myownabs(x_2/2.36368297369728 - 1):
myabsdevnod0_3 := myownabs(x_3 - 8.77392573847685):
myreldevnod0_3 := myownabs(x_3/8.77392573847685 - 1):
myabsdevnod0_4 := myownabs(x_4 - 5.095984487948453):
myreldevnod0_4 := myownabs(x_4/5.095984487948453 - 1):
myabsdevnod0_5 := myownabs(x_5 - 0.9906547649638592):
myreldevnod0_5 := myownabs(x_5/0.9906547649638592 - 1):
myabsdevnod0_6 := myownabs(x_6 - 1.430573978936316):
myreldevnod0_6 := myownabs(x_6/1.430573978936316 - 1):
myabsdevnod0_7 := myownabs(x_7 - 1.321644208161703):
myreldevnod0_7 := myownabs(x_7/1.321644208161703 - 1):
myabsdevnod0_8 := myownabs(x_8 - 9.828725807886321):
myreldevnod0_8 := myownabs(x_8/9.828725807886321 - 1):
myabsdevnod0_9 := myownabs(x_9 - 8.280091670098346):
myreldevnod0_9 := myownabs(x_9/8.280091670098346 - 1):
myabsdevnod0_10 := myownabs(x_10 - 8.375926663921323):
myreldevnod0_10 := myownabs(x_10/8.375926663921323 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := (1/2)*(myownabs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5)):
myreldevnod1_4 := (1/2)*(myownabs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5)):
myabsdevnod1_6 := (1/2)*(myownabs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7)):
myreldevnod1_6 := (1/2)*(myownabs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7)):
myabsdevnod1_8 := (1/2)*(myownabs(myabsdevnod0_8 - myabsdevnod0_9) + (myabsdevnod0_8 + myabsdevnod0_9)):
myreldevnod1_8 := (1/2)*(myownabs(myreldevnod0_8 - myreldevnod0_9) + (myreldevnod0_8 + myreldevnod0_9)):
myabsdevnod1_10 := myabsdevnod0_10:
myreldevnod1_10 := myreldevnod0_10:
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := (1/2)*(myownabs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6)):
myreldevnod2_4 := (1/2)*(myownabs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6)):
myabsdevnod2_8 := (1/2)*(myownabs(myabsdevnod1_8 - myabsdevnod1_10) + (myabsdevnod1_8 + myabsdevnod1_10)):
myreldevnod2_8 := (1/2)*(myownabs(myreldevnod1_8 - myreldevnod1_10) + (myreldevnod1_8 + myreldevnod1_10)):
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
myabsdevnod3_8 := myabsdevnod2_8:
myreldevnod3_8 := myreldevnod2_8:
myabsdevnod4_0 := (1/2)*(myownabs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8)):
myreldevnod4_0 := (1/2)*(myownabs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8)):
zmyabsdevmax := myabsdevnod4_0:
zmyreldevmax := myreldevnod4_0:
obj := myminfun:
fmcMinimum(obj):
fmcInequality('ci_1', c_1):
fmcInequality('ci_2', c_2):
fmcInequality('ci_3', c_3):
fmcInequality('ci_4', c_4):
fmcInequality('ci_5', c_5):
fmcInequality('ci_6', c_6):
fmcInequality('ci_7', c_7):
fmcInequality('ci_8', c_8):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('x_5', x_5):
fmcEscortFloat('x_6', x_6):
fmcEscortFloat('x_7', x_7):
fmcEscortFloat('x_8', x_8):
fmcEscortFloat('x_9', x_9):
fmcEscortFloat('x_10', x_10):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
