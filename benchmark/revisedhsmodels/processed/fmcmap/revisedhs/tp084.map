fmcTitle("tp084"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
a_1 := -24345:
a_2 := -8720288.849:
a_3 := 150512.5253:
a_4 := -156.6950325:
a_5 := 476470.3222:
a_6 := 729482.8271:
a_7 := -145421.402:
a_8 := 2931.1506:
a_9 := -40.427932:
a_10 := 5106.192:
a_11 := 15711.36:
a_12 := -155011.1084:
a_13 := 4360.53352:
a_14 := 12.9492344:
a_15 := 10236.884:
a_16 := 13176.786:
a_17 := -326669.5104:
a_18 := 7390.68412:
a_19 := -27.8986976:
a_20 := 16643.076:
a_21 := 30988.146:
fmcInitialValue('x_1', 2.52):
fmcStrongLowerBound('x_1', 0):
fmcStrongUpperBound('x_1', 1000):
fmcInitialValue('x_2', 2):
fmcStrongLowerBound('x_2', 1.2):
fmcStrongUpperBound('x_2', 2.4):
fmcInitialValue('x_3', 37.5):
fmcStrongLowerBound('x_3', 20):
fmcStrongUpperBound('x_3', 60):
fmcInitialValue('x_4', 9.25):
fmcStrongLowerBound('x_4', 9):
fmcStrongUpperBound('x_4', 9.3):
fmcInitialValue('x_5', 6.8):
fmcStrongLowerBound('x_5', 6.5):
fmcStrongUpperBound('x_5', 7):
t_1 := a_7*x_1 + a_8*x_1*x_2 + a_9*x_1*x_3 + a_10*x_1*x_4 + a_11*x_1*x_5:
t_2 := a_12*x_1 + a_13*x_1*x_2 + a_14*x_1*x_3 + a_15*x_1*x_4 + a_16*x_1*x_5:
t_3 := a_17*x_1 + a_18*x_1*x_2 + a_19*x_1*x_3 + a_20*x_1*x_4 + a_21*x_1*x_5:
myminfun := (-1)*a_1 - a_2*x_1 - a_3*x_1*x_2 - a_4*x_1*x_3 - a_5*x_1*x_4 - a_6*x_1*x_5:
myabsdevnod0_0 := myownabs(myminfun + 5280335.133214754):
myreldevnod0_0 := myownabs(myminfun/5280335.133214754 + 1):
myabsdevnod0_1 := myownabs(x_1 - 4.5374309746554):
myreldevnod0_1 := myownabs(x_1/4.5374309746554 - 1):
myabsdevnod0_2 := myownabs(x_2 - 2.4):
myreldevnod0_2 := myownabs(x_2/2.4 - 1):
myabsdevnod0_3 := myownabs(x_3 - 60):
myreldevnod0_3 := myownabs(x_3/60 - 1):
myabsdevnod0_4 := myownabs(x_4 - 9.3):
myreldevnod0_4 := myownabs(x_4/9.3 - 1):
myabsdevnod0_5 := myownabs(x_5 - 7):
myreldevnod0_5 := myownabs(x_5/7 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := (1/2)*(myownabs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5)):
myreldevnod1_4 := (1/2)*(myownabs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5)):
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := myabsdevnod1_4:
myreldevnod2_4 := myreldevnod1_4:
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
zmyabsdevmax := myabsdevnod3_0:
zmyreldevmax := myreldevnod3_0:
obj := myminfun:
fmcMinimum(obj):
fmcInequality('ci_1', 294000 - t_1):
fmcInequality('ci_2', t_1):
fmcInequality('ci_3', 294000 - t_2):
fmcInequality('ci_4', t_2):
fmcInequality('ci_5', 277200 - t_3):
fmcInequality('ci_6', t_3):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('x_5', x_5):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
