fmcTitle("tp009r"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
mypi := 4*atan(1):
eps := 10^(-6):
lbx1 := (-1)*9 + eps:
ubx1 := 3 - eps:
fmcInitialValue('x_1', 0):
fmcStrongLowerBound('x_1', lbx1):
fmcStrongUpperBound('x_1', ubx1):
fmcInitialValue('x_2', 0):
myminfun := sin(mypi*x_1/12)*cos(mypi*x_2/16):
myabsdevnod0_0 := myownabs(myminfun + 0.5):
myreldevnod0_0 := myownabs(myminfun/0.5 + 1):
myabsdevnod0_1 := myownabs(x_1 + 3):
myreldevnod0_1 := myownabs(x_1/3 + 1):
myabsdevnod0_2 := myownabs(x_2 + 4):
myreldevnod0_2 := myownabs(x_2/4 + 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := myabsdevnod0_2:
myreldevnod1_2 := myreldevnod0_2:
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
zmyabsdevmax := myabsdevnod2_0:
zmyreldevmax := myreldevnod2_0:
obj := myminfun:
fmcMinimum(obj):
fmcEquality('ce_1', 4*x_1 - 3*x_2):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
