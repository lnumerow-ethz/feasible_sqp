fmcTitle("tp076"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
fmcInitialValue('x_1', 0.5):
fmcStrongLowerBound('x_1', 0):
fmcInitialValue('x_2', 0.5):
fmcStrongLowerBound('x_2', 0):
fmcInitialValue('x_3', 0.5):
fmcStrongLowerBound('x_3', 0):
fmcInitialValue('x_4', 0.5):
fmcStrongLowerBound('x_4', 0):
myminfun := x_1^2 + 0.5*x_2^2 + x_3^2 + 0.5*x_4^2 - x_1*x_3 + x_3*x_4 - x_1 - 3*x_2 + x_3 - x_4:
myabsdevnod0_0 := myownabs(myminfun + 4.681818181818182):
myreldevnod0_0 := myownabs(myminfun/4.681818181818182 + 1):
myabsdevnod0_1 := myownabs(x_1 - 0.2727272727272727):
myreldevnod0_1 := myownabs(x_1/0.2727272727272727 - 1):
myabsdevnod0_2 := myownabs(x_2 - 2.090909090909091):
myreldevnod0_2 := myownabs(x_2/2.090909090909091 - 1):
myabsdevnod0_3 := myownabs(x_3):
myreldevnod0_3 := myownabs(x_3):
myabsdevnod0_4 := myownabs(x_4 - 0.5454545454545455):
myreldevnod0_4 := myownabs(x_4/0.5454545454545455 - 1):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := myabsdevnod0_4:
myreldevnod1_4 := myreldevnod0_4:
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := myabsdevnod1_4:
myreldevnod2_4 := myreldevnod1_4:
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
zmyabsdevmax := myabsdevnod3_0:
zmyreldevmax := myreldevnod3_0:
obj := myminfun:
fmcMinimum(obj):
fmcInequality('ci_1', 5 - x_1 - 2*x_2 - x_3 - x_4):
fmcInequality('ci_2', 4 - 3*x_1 - x_2 - 2*x_3 + x_4):
fmcInequality('ci_3', x_2 + 4*x_3 - 1.5):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
