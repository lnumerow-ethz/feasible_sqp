fmcTitle("tp108r"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
mfcorrhs := 0:
fmcInitialValue('x_1', 1):
fmcInitialValue('x_2', 1):
fmcInitialValue('x_3', 1):
fmcInitialValue('x_4', 1):
fmcInitialValue('x_5', 1):
fmcInitialValue('x_6', 1):
fmcInitialValue('x_7', 1):
fmcInitialValue('x_8', 1):
fmcInitialValue('x_9', 1):
fmcStrongLowerBound('x_9', 0):
c_1 := 1 - x_3^2 - x_4^2:
c_2 := 1 - x_9^2:
c_3 := 1 - x_5^2 - x_6^2:
c_4 := 1 - x_1^2 - (x_2 - x_9)^2:
c_5 := 1 - (x_1 - x_5)^2 - (x_2 - x_6)^2:
c_6 := 1 - (x_1 - x_7)^2 - (x_2 - x_8)^2:
c_7 := 1 - (x_3 - x_5)^2 - (x_4 - x_6)^2:
c_8 := 1 - (x_3 - x_7)^2 - (x_4 - x_8)^2:
c_9 := 1 - x_7^2 - (x_8 - x_9)^2:
c_10 := x_1*x_4 - x_2*x_3:
c_11 := x_3*x_9:
c_12 := (-1)*x_5*x_9:
c_13 := x_5*x_8 - x_6*x_7:
mf := (-1/2)*(x_1*x_4 - x_2*x_3 + x_3*x_9 - x_5*x_9 + x_5*x_8 - x_6*x_7):
mfcorrr := (3*x_1 - 2*x_2)^2 + (3*x_5 - 2*x_6)^2:
myminfun := mf + mfcorrr:
myabsdevnod0_0 := myownabs(myminfun + 0.8660254037844386):
myreldevnod0_0 := myownabs(myminfun/0.8660254037844386 + 1):
myabsdevnod0_1 := myownabs(x_1 - 0.5547001962252291):
myreldevnod0_1 := myownabs(x_1/0.5547001962252291 - 1):
myabsdevnod0_2 := myownabs(x_2 - 0.8320502943378437):
myreldevnod0_2 := myownabs(x_2/0.8320502943378437 - 1):
myabsdevnod0_3 := myownabs(x_3 + 0.4432265940102775):
myreldevnod0_3 := myownabs(x_3/0.4432265940102775 + 1):
myabsdevnod0_4 := myownabs(x_4 - 0.8964096085841832):
myreldevnod0_4 := myownabs(x_4/0.8964096085841832 - 1):
myabsdevnod0_5 := myownabs(x_5 - 0.5547001962252291):
myreldevnod0_5 := myownabs(x_5/0.5547001962252291 - 1):
myabsdevnod0_6 := myownabs(x_6 - 0.8320502943378437):
myreldevnod0_6 := myownabs(x_6/0.8320502943378437 - 1):
myabsdevnod0_7 := myownabs(x_7 + 0.4432265940102775):
myreldevnod0_7 := myownabs(x_7/0.4432265940102775 + 1):
myabsdevnod0_8 := myownabs(x_8 - 0.8964096085841832):
myreldevnod0_8 := myownabs(x_8/0.8964096085841832 - 1):
myabsdevnod0_9 := myownabs(x_9):
myreldevnod0_9 := myownabs(x_9):
myabsdevnod1_0 := (1/2)*(myownabs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1)):
myreldevnod1_0 := (1/2)*(myownabs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1)):
myabsdevnod1_2 := (1/2)*(myownabs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3)):
myreldevnod1_2 := (1/2)*(myownabs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3)):
myabsdevnod1_4 := (1/2)*(myownabs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5)):
myreldevnod1_4 := (1/2)*(myownabs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5)):
myabsdevnod1_6 := (1/2)*(myownabs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7)):
myreldevnod1_6 := (1/2)*(myownabs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7)):
myabsdevnod1_8 := (1/2)*(myownabs(myabsdevnod0_8 - myabsdevnod0_9) + (myabsdevnod0_8 + myabsdevnod0_9)):
myreldevnod1_8 := (1/2)*(myownabs(myreldevnod0_8 - myreldevnod0_9) + (myreldevnod0_8 + myreldevnod0_9)):
myabsdevnod2_0 := (1/2)*(myownabs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2)):
myreldevnod2_0 := (1/2)*(myownabs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2)):
myabsdevnod2_4 := (1/2)*(myownabs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6)):
myreldevnod2_4 := (1/2)*(myownabs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6)):
myabsdevnod2_8 := myabsdevnod1_8:
myreldevnod2_8 := myreldevnod1_8:
myabsdevnod3_0 := (1/2)*(myownabs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4)):
myreldevnod3_0 := (1/2)*(myownabs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4)):
myabsdevnod3_8 := myabsdevnod2_8:
myreldevnod3_8 := myreldevnod2_8:
myabsdevnod4_0 := (1/2)*(myownabs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8)):
myreldevnod4_0 := (1/2)*(myownabs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8)):
zmyabsdevmax := myabsdevnod4_0:
zmyreldevmax := myreldevnod4_0:
obj := myminfun:
fmcMinimum(obj):
fmcInequality('ci_1', c_1):
fmcInequality('ci_2', c_2):
fmcInequality('ci_3', c_3):
fmcInequality('ci_4', c_4):
fmcInequality('ci_5', c_5):
fmcInequality('ci_6', c_6):
fmcInequality('ci_7', c_7):
fmcInequality('ci_8', c_8):
fmcInequality('ci_9', c_9):
fmcInequality('ci_10', c_10):
fmcInequality('ci_11', c_11):
fmcInequality('ci_12', c_12):
fmcInequality('ci_13', c_13):
fmcEscortFloat('x_1', x_1):
fmcEscortFloat('x_2', x_2):
fmcEscortFloat('x_3', x_3):
fmcEscortFloat('x_4', x_4):
fmcEscortFloat('x_5', x_5):
fmcEscortFloat('x_6', x_6):
fmcEscortFloat('x_7', x_7):
fmcEscortFloat('x_8', x_8):
fmcEscortFloat('x_9', x_9):
fmcEscortFloat('myminfun', myminfun):
fmcEscortFloat('zmyabsdevmax', zmyabsdevmax):
fmcEscortFloat('zmyreldevmax', zmyreldevmax):
fmcControlMinimum(1, 0):
# End Model
