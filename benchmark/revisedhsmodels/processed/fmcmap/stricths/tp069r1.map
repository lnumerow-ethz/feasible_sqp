fmcTitle("tp069r1"):
# Source version 4
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
a := 0.1:
b := 1000:
d := 1:
n := 4:
ubx2hs := 100:
ubx2r := 3:
ubx2 := ubx2hs:
fmcInitialValue('x_1', 1):
fmcStrongLowerBound('x_1', 0.0001):
fmcStrongUpperBound('x_1', 100):
fmcInitialValue('x_2', 1):
fmcStrongLowerBound('x_2', 0):
fmcStrongUpperBound('x_2', ubx2):
fmcInitialValue('x_3', 1):
fmcStrongLowerBound('x_3', 0):
fmcStrongUpperBound('x_3', 2):
fmcInitialValue('x_4', 1):
fmcStrongLowerBound('x_4', 0):
fmcStrongUpperBound('x_4', 2):
argn := (-1)*x_2 - d*sqrt(n):
arg0 := (-1)*x_2:
argp := (-1)*x_2 + d*sqrt(n):
phin := (1/2)*erfc((-1)*argn/sqrt(2)):
phi0 := (1/2)*erfc((-1)*arg0/sqrt(2)):
phip := (1/2)*erfc((-1)*argp/sqrt(2)):
c_1 := x_3 - 2*phi0:
c_2 := x_4 - phip - phin:
num := b*(exp(x_1) - 1) - x_3:
den := exp(x_1) - 1 + x_4:
mf := (a*n - (num/den)*x_4)/x_1:
obj := mf:
fmcMinimum(obj):
fmcEquality('ce_1', c_1):
fmcEquality('ce_2', c_2):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
