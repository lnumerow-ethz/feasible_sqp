fmcTitle("tp118"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
fmcInitialValue('x_1', 20):
fmcStrongLowerBound('x_1', 8):
fmcStrongUpperBound('x_1', 21):
fmcInitialValue('x_2', 55):
fmcStrongLowerBound('x_2', 43):
fmcStrongUpperBound('x_2', 57):
fmcInitialValue('x_3', 15):
fmcStrongLowerBound('x_3', 3):
fmcStrongUpperBound('x_3', 16):
fmcInitialValue('x_4', 20):
fmcStrongLowerBound('x_4', 0):
fmcStrongUpperBound('x_4', 90):
fmcInitialValue('x_5', 60):
fmcStrongLowerBound('x_5', 0):
fmcStrongUpperBound('x_5', 120):
fmcInitialValue('x_6', 20):
fmcStrongLowerBound('x_6', 0):
fmcStrongUpperBound('x_6', 60):
fmcInitialValue('x_7', 20):
fmcStrongLowerBound('x_7', 0):
fmcStrongUpperBound('x_7', 90):
fmcInitialValue('x_8', 60):
fmcStrongLowerBound('x_8', 0):
fmcStrongUpperBound('x_8', 120):
fmcInitialValue('x_9', 20):
fmcStrongLowerBound('x_9', 0):
fmcStrongUpperBound('x_9', 60):
fmcInitialValue('x_10', 20):
fmcStrongLowerBound('x_10', 0):
fmcStrongUpperBound('x_10', 90):
fmcInitialValue('x_11', 60):
fmcStrongLowerBound('x_11', 0):
fmcStrongUpperBound('x_11', 120):
fmcInitialValue('x_12', 20):
fmcStrongLowerBound('x_12', 0):
fmcStrongUpperBound('x_12', 60):
fmcInitialValue('x_13', 20):
fmcStrongLowerBound('x_13', 0):
fmcStrongUpperBound('x_13', 90):
fmcInitialValue('x_14', 60):
fmcStrongLowerBound('x_14', 0):
fmcStrongUpperBound('x_14', 120):
fmcInitialValue('x_15', 20):
fmcStrongLowerBound('x_15', 0):
fmcStrongUpperBound('x_15', 60):
obj := 2.3*x_1 + 0.0001*x_1^2 + 2.3*x_4 + 0.0001*x_4^2 + 2.3*x_7 + 0.0001*x_7^2 + 2.3*x_10 + 0.0001*x_10^2 +
2.3*x_13 + 0.0001*x_13^2 + 1.7*x_2 + 0.0001*x_2^2 + 1.7*x_5 + 0.0001*x_5^2 + 1.7*x_8 + 0.0001*x_8^2 +
1.7*x_11 + 0.0001*x_11^2 + 1.7*x_14 + 0.0001*x_14^2 + 2.2*x_3 + 0.00015*x_3^2 + 2.2*x_6 + 0.00015*x_6^2 +
2.2*x_9 + 0.00015*x_9^2 + 2.2*x_12 + 0.00015*x_12^2 + 2.2*x_15 + 0.00015*x_15^2:
fmcMinimum(obj):
fmcInequality('ci_1', 7 + x_4 - x_1):
fmcInequality('ci_2', 6 - x_4 + x_1):
fmcInequality('ci_3', 7 + x_7 - x_4):
fmcInequality('ci_4', 6 - x_7 + x_4):
fmcInequality('ci_5', 7 + x_10 - x_7):
fmcInequality('ci_6', 6 - x_10 + x_7):
fmcInequality('ci_7', 7 + x_13 - x_10):
fmcInequality('ci_8', 6 - x_13 + x_10):
fmcInequality('ci_9', 7 + x_5 - x_2):
fmcInequality('ci_10', 7 - x_5 + x_2):
fmcInequality('ci_11', 7 + x_8 - x_5):
fmcInequality('ci_12', 7 - x_8 + x_5):
fmcInequality('ci_13', 7 + x_11 - x_8):
fmcInequality('ci_14', 7 - x_11 + x_8):
fmcInequality('ci_15', 7 + x_14 - x_11):
fmcInequality('ci_16', 7 - x_14 + x_11):
fmcInequality('ci_17', 7 + x_6 - x_3):
fmcInequality('ci_18', 6 - x_6 + x_3):
fmcInequality('ci_19', 7 + x_9 - x_6):
fmcInequality('ci_20', 6 - x_9 + x_6):
fmcInequality('ci_21', 7 + x_12 - x_9):
fmcInequality('ci_22', 6 - x_12 + x_9):
fmcInequality('ci_23', 7 + x_15 - x_12):
fmcInequality('ci_24', 6 - x_15 + x_12):
fmcInequality('ci_25', x_1 + x_2 + x_3 - 60):
fmcInequality('ci_26', x_4 + x_5 + x_6 - 50):
fmcInequality('ci_27', x_7 + x_8 + x_9 - 70):
fmcInequality('ci_28', x_10 + x_11 + x_12 - 85):
fmcInequality('ci_29', x_13 + x_14 + x_15 - 100):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
