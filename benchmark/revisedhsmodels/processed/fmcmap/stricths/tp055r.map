fmcTitle("tp055r"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
lbx3hs := 0:
lbx3r := 1:
lbx3 := lbx3hs:
fmcInitialValue('x_1', 1):
fmcStrongLowerBound('x_1', 0):
fmcStrongUpperBound('x_1', 1):
fmcInitialValue('x_2', 2):
fmcStrongLowerBound('x_2', 0):
fmcInitialValue('x_3', 0):
fmcStrongLowerBound('x_3', lbx3):
fmcInitialValue('x_4', 0):
fmcStrongLowerBound('x_4', 0):
fmcStrongUpperBound('x_4', 1):
fmcInitialValue('x_5', 0):
fmcStrongLowerBound('x_5', 0):
fmcInitialValue('x_6', 2):
fmcStrongLowerBound('x_6', 0):
obj := x_1 + 2*x_2 + 4*x_5 + exp(x_1*x_4):
fmcMinimum(obj):
fmcEquality('ce_1', x_1 + 2*x_2 + 5*x_5 - 6):
fmcEquality('ce_2', x_1 + x_2 + x_3 - 3):
fmcEquality('ce_3', x_4 + x_5 + x_6 - 2):
fmcEquality('ce_4', x_1 + x_4 - 1):
fmcEquality('ce_5', x_2 + x_5 - 2):
fmcEquality('ce_6', x_3 + x_6 - 2):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
