fmcTitle("tp122"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
mypi := 4*atan(1):
c2 := 2:
c3 := 3:
c10 := 10:
c20 := 20:
c1000 := 1000:
c100000 := 100000:
rrough := ((50/c1000)/((2700 + 19300 + 7860)*(4/c3)*mypi))^(1/c3):
rcage := 1:
fmcInitialValue('x_1', rrough):
fmcInitialValue('x_2', rrough):
fmcInitialValue('x_3', rrough):
fmcInitialValue('x_4', (-1)/c20):
fmcInitialValue('x_5', 1/c20):
fmcInitialValue('x_6', (-1)/c20):
fmcInitialValue('x_7', (-1)/c20):
fmcInitialValue('x_8', (-1)*rrough/c10):
fmcInitialValue('x_9', 1/c20):
fmcInitialValue('x_10', 1/c10):
fmcInitialValue('x_11', 1/c10):
fmcInitialValue('x_12', 1/c10):
massa := 2700*(4/c3)*mypi*x_1^3:
massg := 19300*(4/c3)*mypi*x_2^3:
massi := 7860*(4/c3)*mypi*x_3^3:
dista0p2 := x_4^2 + x_7^2 + x_10^2:
distg0p2 := x_5^2 + x_8^2 + x_11^2:
disti0p2 := x_6^2 + x_9^2 + x_12^2:
distag := sqrt((x_4 - x_5)^2 + (x_7 - x_8)^2 + (x_10 - x_11)^2):
distgi := sqrt((x_5 - x_6)^2 + (x_8 - x_9)^2 + (x_11 - x_12)^2):
distia := sqrt((x_6 - x_4)^2 + (x_9 - x_7)^2 + (x_12 - x_10)^2):
rsumag := x_1 + x_2:
rsumgi := x_2 + x_3:
rsumia := x_3 + x_1:
mf := (980665/c100000)*(massa*x_10 + massg*x_11 + massi*x_12):
c_1 := x_8 + x_2/c10:
c_2 := massa + massg + massi - 50/c1000:
c_3 := (x_1^2 + 2*rcage*(x_10 - x_1) - dista0p2)/rrough:
c_4 := (x_2^2 + 2*rcage*(x_11 - x_2) - distg0p2)/rrough:
c_5 := (x_3^2 + 2*rcage*(x_12 - x_3) - disti0p2)/rrough:
c_6 := distag - rsumag:
c_7 := distgi - rsumgi:
c_8 := distia - rsumia:
c_9 := (-1)*(x_4 + x_1/c10):
c_10 := x_5 - x_2/c10:
c_11 := (-1)*(x_6 + x_3/c10):
c_12 := (-1)*(x_7 + x_1/c10):
c_13 := x_9 - x_3/c10:
c_14 := x_1 - x_2/c2:
c_15 := x_1 - x_3/c2:
c_16 := x_2 - x_1/c2:
c_17 := x_2 - x_3/c2:
c_18 := x_3 - x_1/c2:
c_19 := x_3 - x_2/c2:
obj := mf:
fmcMinimum(obj):
fmcEquality('ce_1', c_1):
fmcEquality('ce_2', c_2):
fmcInequality('ci_1', c_3):
fmcInequality('ci_2', c_4):
fmcInequality('ci_3', c_5):
fmcInequality('ci_4', c_6):
fmcInequality('ci_5', c_7):
fmcInequality('ci_6', c_8):
fmcInequality('ci_7', c_9):
fmcInequality('ci_8', c_10):
fmcInequality('ci_9', c_11):
fmcInequality('ci_10', c_12):
fmcInequality('ci_11', c_13):
fmcInequality('ci_12', c_14):
fmcInequality('ci_13', c_15):
fmcInequality('ci_14', c_16):
fmcInequality('ci_15', c_17):
fmcInequality('ci_16', c_18):
fmcInequality('ci_17', c_19):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
