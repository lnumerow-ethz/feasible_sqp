fmcTitle("tp109"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
c22938a := -22.938:
c22938b := 22.938:
c22938 := c22938a:
a := 50.176:
arg := 0.25:
b := sin(arg):
c := cos(arg):
fmcInitialValue('x_1', 0):
fmcStrongLowerBound('x_1', 0):
fmcInitialValue('x_2', 0):
fmcStrongLowerBound('x_2', 0):
fmcInitialValue('x_3', 0):
fmcStrongLowerBound('x_3', -0.55):
fmcStrongUpperBound('x_3', 0.55):
fmcInitialValue('x_4', 0):
fmcStrongLowerBound('x_4', -0.55):
fmcStrongUpperBound('x_4', 0.55):
fmcInitialValue('x_5', 0):
fmcStrongLowerBound('x_5', 196):
fmcStrongUpperBound('x_5', 252):
fmcInitialValue('x_6', 0):
fmcStrongLowerBound('x_6', 196):
fmcStrongUpperBound('x_6', 252):
fmcInitialValue('x_7', 0):
fmcStrongLowerBound('x_7', 196):
fmcStrongUpperBound('x_7', 252):
fmcInitialValue('x_8', 0):
fmcStrongLowerBound('x_8', -400):
fmcStrongUpperBound('x_8', 800):
fmcInitialValue('x_9', 0):
fmcStrongLowerBound('x_9', -400):
fmcStrongUpperBound('x_9', 800):
cf_1 := x_4 - x_3 + .55:
cf_2 := x_3 - x_4 + .55:
cf_3 := 2250000 - x_1^2 - x_8^2:
cf_4 := 2250000 - x_2^2 - x_9^2:
cf_5 := x_5*x_6*sin((-1)*x_3 - 1/4) + x_5*x_7*sin((-1)*x_4 - 1/4) + 2*b*x_5^2 - a*x_1 + 400*a:
cf_6 := x_5*x_6*sin(x_3 - 1/4) + x_6*x_7*sin(x_3 - x_4 - 1/4) + 2*b*x_6^2 - a*x_2 + 400*a:
cf_7 := x_5*x_7*sin(x_4 - 1/4) + x_6*x_7*sin(x_4 - x_3 - 1/4) + 2*b*x_7^2 + 881.779*a:
cf_8 := a*x_8 + x_5*x_6*cos((-1)*x_3 - 1/4) + x_5*x_7*cos((-1)*x_4 - 1/4) - 200*a - 2*c*x_5^2 +
0.7533e-3*a*x_5^2:
cf_9 := a*x_9 + x_5*x_6*cos(x_3 - 1/4) + x_6*x_7*cos(x_3 - x_4 - 1/4) - 2*c*x_6^2 + 0.7533e-3*a*x_6^2 - 200*a:
cf_10 := x_5*x_7*cos(x_4 - 1/4) + x_6*x_7*cos(x_4 - x_3 - 1/4) - 2*c*x_7^2 + c22938*a + 0.7533e-3*a*x_7^2:
mf := 3*x_1 + 1.0e-6*x_1^3 + 2*x_2 + 0.522074e-6*x_2^3:
obj := mf:
fmcMinimum(obj):
fmcEquality('ce_1', cf_5):
fmcEquality('ce_2', cf_6):
fmcEquality('ce_3', cf_7):
fmcEquality('ce_4', cf_8):
fmcEquality('ce_5', cf_9):
fmcEquality('ce_6', cf_10):
fmcInequality('ci_1', cf_1):
fmcInequality('ci_2', cf_2):
fmcInequality('ci_3', cf_3):
fmcInequality('ci_4', cf_4):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
