fmcTitle("tp101"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
a := -1/4:
fmcInitialValue('x_1', 6):
fmcStrongLowerBound('x_1', 1/10):
fmcStrongUpperBound('x_1', 10):
fmcInitialValue('x_2', 6):
fmcStrongLowerBound('x_2', 1/10):
fmcStrongUpperBound('x_2', 10):
fmcInitialValue('x_3', 6):
fmcStrongLowerBound('x_3', 1/10):
fmcStrongUpperBound('x_3', 10):
fmcInitialValue('x_4', 6):
fmcStrongLowerBound('x_4', 1/10):
fmcStrongUpperBound('x_4', 10):
fmcInitialValue('x_5', 6):
fmcStrongLowerBound('x_5', 1/10):
fmcStrongUpperBound('x_5', 10):
fmcInitialValue('x_6', 6):
fmcStrongLowerBound('x_6', 1/10):
fmcStrongUpperBound('x_6', 10):
fmcInitialValue('x_7', 6):
fmcStrongLowerBound('x_7', 1/100):
fmcStrongUpperBound('x_7', 10):
c_1 := 1 - (1/2)*x_1^(1/2)*x_3^(-1)*x_6^(-2)*x_7 - (7/10)*x_1^3*x_2*x_3^(-2)*x_6*x_7^(1/2) -
(2/10)*x_2^(-1)*x_3*x_4^(-1/2)*x_6^(2/3)* x_7^(1/4):
c_2 := 1 - (13/10)*x_1^(-1/2)*x_2*x_3^(-1)*x_5^(-1)* x_6 - (8/10)*x_3*x_4^(-1)*x_5^(-1)*x_6^2 -
(31/10)*x_1^(-1)*x_2^(1/2)*x_4^(-2)* x_5^(-1)*x_6^(1/3):
c_3 := 1 - 2*x_1*x_3^(-3/2)*x_5*x_6^(-1)*x_7^(1/3) - (1/10)*x_2*x_3^(-1/2)*x_5*x_6^(-1)* x_7^(-1/2) -
x_1^(-1)*x_2*x_3^(1/2)*x_5 - (65/100)*x_2^(-2)*x_3*x_5*x_6^(-1)*x_7:
c_4 := 1 - (2/10)*x_1^(-2)*x_2*x_4^(-1)*x_5^(1/2)* x_7^(1/3) - (3/10)*x_1^(1/2)*x_2^2*x_3*x_4^(1/3)*
x_7^(1/4)*x_5^(-2/3) - (4/10)*x_1^(-3)*x_2^(-2)*x_3*x_5* x_7^(3/4) - (1/2)*x_3^(-2)*x_4*x_7^(1/2):
mf := 10*x_1*x_2^(-1)*x_4^2*x_6^(-3)*x_7^a + 15*x_1^(-1)*x_2^(-2)*x_3*x_4*x_5^(-1)* x_7^(-1/2) +
20*x_1^(-2)*x_2*x_4^(-1)*x_5^(-2)*x_6 + 25*x_1^2*x_2^2*x_3^(-1)*x_5^(1/2)* x_6^(-2)*x_7:
c_5 := mf - 100:
c_6 := 3000 - mf:
obj := mf:
fmcMinimum(obj):
fmcInequality('ci_1', c_1):
fmcInequality('ci_2', c_2):
fmcInequality('ci_3', c_3):
fmcInequality('ci_4', c_4):
fmcInequality('ci_5', c_5):
fmcInequality('ci_6', c_6):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
