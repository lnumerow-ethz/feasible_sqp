fmcTitle("tp053"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
fmcInitialValue('x_1', 2):
fmcStrongLowerBound('x_1', -10):
fmcStrongUpperBound('x_1', 10):
fmcInitialValue('x_2', 2):
fmcStrongLowerBound('x_2', -10):
fmcStrongUpperBound('x_2', 10):
fmcInitialValue('x_3', 2):
fmcStrongLowerBound('x_3', -10):
fmcStrongUpperBound('x_3', 10):
fmcInitialValue('x_4', 2):
fmcStrongLowerBound('x_4', -10):
fmcStrongUpperBound('x_4', 10):
fmcInitialValue('x_5', 2):
fmcStrongLowerBound('x_5', -10):
fmcStrongUpperBound('x_5', 10):
obj := (x_1 - x_2)^2 + (x_2 + x_3 - 2)^2 + (x_4 - 1)^2 + (x_5 - 1)^2:
fmcMinimum(obj):
fmcEquality('ce_1', x_1 + 3*x_2):
fmcEquality('ce_2', x_3 + x_4 - 2*x_5):
fmcEquality('ce_3', x_2 - x_5):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
