fmcTitle("tp054v2"):
# Source version 1
# Simple APM canonicalizer version 1.3
# FMCMAP back end version 1.1
asin := proc(x::algebraic) local y: y := arcsin(x): RETURN(y): end:
atan := proc(x::algebraic) local y: y := arctan(x): RETURN(y): end:
myownabs := proc(x::algebraic) local y: y := fmc_m_abs(x): RETURN(y): end:
fmcInitialValue('x_1', -1/2):
fmcStrongLowerBound('x_1', -5/4):
fmcStrongUpperBound('x_1', 5/4):
fmcInitialValue('x_2', 1/2):
fmcStrongLowerBound('x_2', -11):
fmcStrongUpperBound('x_2', 9):
fmcInitialValue('x_3', 2/7):
fmcStrongLowerBound('x_3', -2/7):
fmcStrongUpperBound('x_3', 8/7):
fmcInitialValue('x_4', -4/25):
fmcStrongLowerBound('x_4', -1/5):
fmcStrongUpperBound('x_4', 1/5):
fmcInitialValue('x_5', 1/25):
fmcStrongLowerBound('x_5', -1001/50):
fmcStrongUpperBound('x_5', 999/50):
fmcInitialValue('x_6', -1/10):
fmcStrongLowerBound('x_6', -1/5):
fmcStrongUpperBound('x_6', 1/5):
h1 := (x_1^2 + x_1*x_2*2/5 + x_2^2)*25/24:
h2 := x_3^2 + x_4^2 + x_5^2 + x_6^2:
mf := h1 + h2:
obj := mf:
fmcMinimum(obj):
fmcEquality('ce_1', 8*x_1 + 4*x_2 - 18/5):
fmcEscortFloat('obj', obj):
fmcControlMinimum(1, 0):
# End Model
