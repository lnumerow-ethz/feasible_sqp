Model tp102
! Source version 1
! Simple APM canonicalizer version 1.3
! APM back end version 1.1
Parameters
a = 1/8
End Parameters
Variables
x_1 = 6, >= 1/10, <= 10
x_2 = 6, >= 1/10, <= 10
x_3 = 6, >= 1/10, <= 10
x_4 = 6, >= 1/10, <= 10
x_5 = 6, >= 1/10, <= 10
x_6 = 6, >= 1/10, <= 10
x_7 = 6, >= 1/100, <= 10
obj
End Variables
Intermediates
c_1 = 1 - (1/2)*x_1^(1/2)*x_3^(-1)*x_6^(-2)*x_7 - (7/10)*x_1^3*x_2*x_3^(-2)*x_6*x_7^(1/2) - &
(2/10)*x_2^(-1)*x_3*x_4^(-1/2)*x_6^(2/3)* x_7^(1/4)
c_2 = 1 - (13/10)*x_1^(-1/2)*x_2*x_3^(-1)*x_5^(-1)* x_6 - (8/10)*x_3*x_4^(-1)*x_5^(-1)*x_6^2 - &
(31/10)*x_1^(-1)*x_2^(1/2)*x_4^(-2)* x_5^(-1)*x_6^(1/3)
c_3 = 1 - 2*x_1*x_3^(-3/2)*x_5*x_6^(-1)*x_7^(1/3) - (1/10)*x_2*x_3^(-1/2)*x_5*x_6^(-1)* x_7^(-1/2) - &
x_1^(-1)*x_2*x_3^(1/2)*x_5 - (65/100)*x_2^(-2)*x_3*x_5*x_6^(-1)*x_7
c_4 = 1 - (2/10)*x_1^(-2)*x_2*x_4^(-1)*x_5^(1/2)* x_7^(1/3) - (3/10)*x_1^(1/2)*x_2^2*x_3*x_4^(1/3)* &
x_7^(1/4)*x_5^(-2/3) - (4/10)*x_1^(-3)*x_2^(-2)*x_3*x_5* x_7^(3/4) - (1/2)*x_3^(-2)*x_4*x_7^(1/2)
mf = 10*x_1*x_2^(-1)*x_4^2*x_6^(-3)*x_7^a + 15*x_1^(-1)*x_2^(-2)*x_3*x_4*x_5^(-1)* x_7^(-1/2) + &
20*x_1^(-2)*x_2*x_4^(-1)*x_5^(-2)*x_6 + 25*x_1^2*x_2^2*x_3^(-1)*x_5^(1/2)* x_6^(-2)*x_7
c_5 = mf - 100
c_6 = 3000 - mf
myminfun = mf
myabsdevnod0_0 = abs(myminfun - 911.8805714301084)
myreldevnod0_0 = abs(myminfun/911.8805714301084 - 1)
myabsdevnod0_1 = abs(x_1 - 3.89625319107028)
myreldevnod0_1 = abs(x_1/3.89625319107028 - 1)
myabsdevnod0_2 = abs(x_2 - 0.8093587601054144)
myreldevnod0_2 = abs(x_2/0.8093587601054144 - 1)
myabsdevnod0_3 = abs(x_3 - 2.664385993775489)
myreldevnod0_3 = abs(x_3/2.664385993775489 - 1)
myabsdevnod0_4 = abs(x_4 - 4.30091287479402)
myreldevnod0_4 = abs(x_4/4.30091287479402 - 1)
myabsdevnod0_5 = abs(x_5 - 0.8535549352485839)
myreldevnod0_5 = abs(x_5/0.8535549352485839 - 1)
myabsdevnod0_6 = abs(x_6 - 1.095287444576103)
myreldevnod0_6 = abs(x_6/1.095287444576103 - 1)
myabsdevnod0_7 = abs(x_7 - 0.02731045965771926)
myreldevnod0_7 = abs(x_7/0.02731045965771926 - 1)
myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1))
myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1))
myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3))
myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3))
myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5))
myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5))
myabsdevnod1_6 = (1/2)*(abs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7))
myreldevnod1_6 = (1/2)*(abs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7))
myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2))
myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2))
myabsdevnod2_4 = (1/2)*(abs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6))
myreldevnod2_4 = (1/2)*(abs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6))
myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4))
myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4))
zmyabsdevmax = myabsdevnod3_0
zmyreldevmax = myreldevnod3_0
End Intermediates
Equations
obj = myminfun
c_1 >= 0
c_2 >= 0
c_3 >= 0
c_4 >= 0
c_5 >= 0
c_6 >= 0
End Equations
End Model
