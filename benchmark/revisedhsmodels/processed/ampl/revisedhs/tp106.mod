# Model tp106
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
var x_1 >= 100, <= 10000;
let x_1 := 5000;
var x_2 >= 1000, <= 10000;
let x_2 := 5000;
var x_3 >= 1000, <= 10000;
let x_3 := 5000;
var x_4 >= 10, <= 1000;
let x_4 := 200;
var x_5 >= 10, <= 1000;
let x_5 := 350;
var x_6 >= 10, <= 1000;
let x_6 := 150;
var x_7 >= 10, <= 1000;
let x_7 := 225;
var x_8 >= 10, <= 1000;
let x_8 := 425;
var c_1 = 1 - .0025*(x_4 + x_6);
var c_2 = 1 - .0025*(x_5 + x_7 - x_4);
var c_3 = 1 - .01*(x_8 - x_5);
var c_4 = x_1*x_6 - 833.33252*x_4 - 100*x_1 + 83333.333;
var c_5 = x_2*x_7 - 1250*x_5 - x_2*x_4 + 1250*x_4;
var c_6 = x_3*x_8 - 1250000 - x_3*x_5 + 2500*x_5;
var mf = x_1 + x_2 + x_3;
var myminfun = mf;
var myabsdevnod0_0 = abs(myminfun - 7049.248020528665);
var myreldevnod0_0 = abs(myminfun/7049.248020528665 - 1);
var myabsdevnod0_1 = abs(x_1 - 579.3066844253549);
var myreldevnod0_1 = abs(x_1/579.3066844253549 - 1);
var myabsdevnod0_2 = abs(x_2 - 1359.970668051655);
var myreldevnod0_2 = abs(x_2/1359.970668051655 - 1);
var myabsdevnod0_3 = abs(x_3 - 5109.970668051655);
var myreldevnod0_3 = abs(x_3/5109.970668051655 - 1);
var myabsdevnod0_4 = abs(x_4 - 182.0176995811199);
var myreldevnod0_4 = abs(x_4/182.0176995811199 - 1);
var myabsdevnod0_5 = abs(x_5 - 295.6011732779338);
var myreldevnod0_5 = abs(x_5/295.6011732779338 - 1);
var myabsdevnod0_6 = abs(x_6 - 217.9823004188801);
var myreldevnod0_6 = abs(x_6/217.9823004188801 - 1);
var myabsdevnod0_7 = abs(x_7 - 286.4165263031861);
var myreldevnod0_7 = abs(x_7/286.4165263031861 - 1);
var myabsdevnod0_8 = abs(x_8 - 395.6011732779338);
var myreldevnod0_8 = abs(x_8/395.6011732779338 - 1);
var myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1));
var myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1));
var myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3));
var myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3));
var myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5));
var myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5));
var myabsdevnod1_6 = (1/2)*(abs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7));
var myreldevnod1_6 = (1/2)*(abs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7));
var myabsdevnod1_8 = myabsdevnod0_8;
var myreldevnod1_8 = myreldevnod0_8;
var myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2));
var myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2));
var myabsdevnod2_4 = (1/2)*(abs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6));
var myreldevnod2_4 = (1/2)*(abs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6));
var myabsdevnod2_8 = myabsdevnod1_8;
var myreldevnod2_8 = myreldevnod1_8;
var myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4));
var myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4));
var myabsdevnod3_8 = myabsdevnod2_8;
var myreldevnod3_8 = myreldevnod2_8;
var myabsdevnod4_0 = (1/2)*(abs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8));
var myreldevnod4_0 = (1/2)*(abs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8));
var zmyabsdevmax = myabsdevnod4_0;
var zmyreldevmax = myreldevnod4_0;
minimize obj: myminfun;
subject to ci_1: c_1 >= 0;
subject to ci_2: c_2 >= 0;
subject to ci_3: c_3 >= 0;
subject to ci_4: c_4 >= 0;
subject to ci_5: c_5 >= 0;
subject to ci_6: c_6 >= 0;
solve;
display x_1;
display x_2;
display x_3;
display x_4;
display x_5;
display x_6;
display x_7;
display x_8;
display myminfun;
display zmyabsdevmax;
display zmyreldevmax;
# End Model
