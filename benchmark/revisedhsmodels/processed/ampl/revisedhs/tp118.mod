# Model tp118
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
var x_1 >= 8, <= 21;
let x_1 := 20;
var x_2 >= 43, <= 57;
let x_2 := 55;
var x_3 >= 3, <= 16;
let x_3 := 15;
var x_4 >= 0, <= 90;
let x_4 := 20;
var x_5 >= 0, <= 120;
let x_5 := 60;
var x_6 >= 0, <= 60;
let x_6 := 20;
var x_7 >= 0, <= 90;
let x_7 := 20;
var x_8 >= 0, <= 120;
let x_8 := 60;
var x_9 >= 0, <= 60;
let x_9 := 20;
var x_10 >= 0, <= 90;
let x_10 := 20;
var x_11 >= 0, <= 120;
let x_11 := 60;
var x_12 >= 0, <= 60;
let x_12 := 20;
var x_13 >= 0, <= 90;
let x_13 := 20;
var x_14 >= 0, <= 120;
let x_14 := 60;
var x_15 >= 0, <= 60;
let x_15 := 20;
var myminfun = 2.3*x_1 + 0.0001*x_1^2 + 2.3*x_4 + 0.0001*x_4^2 + 2.3*x_7 + 0.0001*x_7^2 + 2.3*x_10 +
0.0001*x_10^2 + 2.3*x_13 + 0.0001*x_13^2 + 1.7*x_2 + 0.0001*x_2^2 + 1.7*x_5 + 0.0001*x_5^2 + 1.7*x_8 +
0.0001*x_8^2 + 1.7*x_11 + 0.0001*x_11^2 + 1.7*x_14 + 0.0001*x_14^2 + 2.2*x_3 + 0.00015*x_3^2 + 2.2*x_6 +
0.00015*x_6^2 + 2.2*x_9 + 0.00015*x_9^2 + 2.2*x_12 + 0.00015*x_12^2 + 2.2*x_15 + 0.00015*x_15^2;
var myabsdevnod0_0 = abs(myminfun - 664.82045);
var myreldevnod0_0 = abs(myminfun/664.82045 - 1);
var myabsdevnod0_1 = abs(x_1 - 8);
var myreldevnod0_1 = abs(x_1/8 - 1);
var myabsdevnod0_2 = abs(x_2 - 49);
var myreldevnod0_2 = abs(x_2/49 - 1);
var myabsdevnod0_3 = abs(x_3 - 3);
var myreldevnod0_3 = abs(x_3/3 - 1);
var myabsdevnod0_4 = abs(x_4 - 1);
var myreldevnod0_4 = abs(x_4 - 1);
var myabsdevnod0_5 = abs(x_5 - 56);
var myreldevnod0_5 = abs(x_5/56 - 1);
var myabsdevnod0_6 = abs(x_6);
var myreldevnod0_6 = abs(x_6);
var myabsdevnod0_7 = abs(x_7 - 1);
var myreldevnod0_7 = abs(x_7 - 1);
var myabsdevnod0_8 = abs(x_8 - 63);
var myreldevnod0_8 = abs(x_8/63 - 1);
var myabsdevnod0_9 = abs(x_9 - 6);
var myreldevnod0_9 = abs(x_9/6 - 1);
var myabsdevnod0_10 = abs(x_10 - 3);
var myreldevnod0_10 = abs(x_10/3 - 1);
var myabsdevnod0_11 = abs(x_11 - 70);
var myreldevnod0_11 = abs(x_11/70 - 1);
var myabsdevnod0_12 = abs(x_12 - 12);
var myreldevnod0_12 = abs(x_12/12 - 1);
var myabsdevnod0_13 = abs(x_13 - 5);
var myreldevnod0_13 = abs(x_13/5 - 1);
var myabsdevnod0_14 = abs(x_14 - 77);
var myreldevnod0_14 = abs(x_14/77 - 1);
var myabsdevnod0_15 = abs(x_15 - 18);
var myreldevnod0_15 = abs(x_15/18 - 1);
var myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1));
var myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1));
var myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3));
var myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3));
var myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5));
var myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5));
var myabsdevnod1_6 = (1/2)*(abs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7));
var myreldevnod1_6 = (1/2)*(abs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7));
var myabsdevnod1_8 = (1/2)*(abs(myabsdevnod0_8 - myabsdevnod0_9) + (myabsdevnod0_8 + myabsdevnod0_9));
var myreldevnod1_8 = (1/2)*(abs(myreldevnod0_8 - myreldevnod0_9) + (myreldevnod0_8 + myreldevnod0_9));
var myabsdevnod1_10 = (1/2)*(abs(myabsdevnod0_10 - myabsdevnod0_11) + (myabsdevnod0_10 + myabsdevnod0_11));
var myreldevnod1_10 = (1/2)*(abs(myreldevnod0_10 - myreldevnod0_11) + (myreldevnod0_10 + myreldevnod0_11));
var myabsdevnod1_12 = (1/2)*(abs(myabsdevnod0_12 - myabsdevnod0_13) + (myabsdevnod0_12 + myabsdevnod0_13));
var myreldevnod1_12 = (1/2)*(abs(myreldevnod0_12 - myreldevnod0_13) + (myreldevnod0_12 + myreldevnod0_13));
var myabsdevnod1_14 = (1/2)*(abs(myabsdevnod0_14 - myabsdevnod0_15) + (myabsdevnod0_14 + myabsdevnod0_15));
var myreldevnod1_14 = (1/2)*(abs(myreldevnod0_14 - myreldevnod0_15) + (myreldevnod0_14 + myreldevnod0_15));
var myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2));
var myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2));
var myabsdevnod2_4 = (1/2)*(abs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6));
var myreldevnod2_4 = (1/2)*(abs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6));
var myabsdevnod2_8 = (1/2)*(abs(myabsdevnod1_8 - myabsdevnod1_10) + (myabsdevnod1_8 + myabsdevnod1_10));
var myreldevnod2_8 = (1/2)*(abs(myreldevnod1_8 - myreldevnod1_10) + (myreldevnod1_8 + myreldevnod1_10));
var myabsdevnod2_12 = (1/2)*(abs(myabsdevnod1_12 - myabsdevnod1_14) + (myabsdevnod1_12 + myabsdevnod1_14));
var myreldevnod2_12 = (1/2)*(abs(myreldevnod1_12 - myreldevnod1_14) + (myreldevnod1_12 + myreldevnod1_14));
var myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4));
var myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4));
var myabsdevnod3_8 = (1/2)*(abs(myabsdevnod2_8 - myabsdevnod2_12) + (myabsdevnod2_8 + myabsdevnod2_12));
var myreldevnod3_8 = (1/2)*(abs(myreldevnod2_8 - myreldevnod2_12) + (myreldevnod2_8 + myreldevnod2_12));
var myabsdevnod4_0 = (1/2)*(abs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8));
var myreldevnod4_0 = (1/2)*(abs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8));
var zmyabsdevmax = myabsdevnod4_0;
var zmyreldevmax = myreldevnod4_0;
minimize obj: myminfun;
subject to ci_1: 7 + x_4 - x_1 >= 0;
subject to ci_2: 6 - x_4 + x_1 >= 0;
subject to ci_3: 7 + x_7 - x_4 >= 0;
subject to ci_4: 6 - x_7 + x_4 >= 0;
subject to ci_5: 7 + x_10 - x_7 >= 0;
subject to ci_6: 6 - x_10 + x_7 >= 0;
subject to ci_7: 7 + x_13 - x_10 >= 0;
subject to ci_8: 6 - x_13 + x_10 >= 0;
subject to ci_9: 7 + x_5 - x_2 >= 0;
subject to ci_10: 7 - x_5 + x_2 >= 0;
subject to ci_11: 7 + x_8 - x_5 >= 0;
subject to ci_12: 7 - x_8 + x_5 >= 0;
subject to ci_13: 7 + x_11 - x_8 >= 0;
subject to ci_14: 7 - x_11 + x_8 >= 0;
subject to ci_15: 7 + x_14 - x_11 >= 0;
subject to ci_16: 7 - x_14 + x_11 >= 0;
subject to ci_17: 7 + x_6 - x_3 >= 0;
subject to ci_18: 6 - x_6 + x_3 >= 0;
subject to ci_19: 7 + x_9 - x_6 >= 0;
subject to ci_20: 6 - x_9 + x_6 >= 0;
subject to ci_21: 7 + x_12 - x_9 >= 0;
subject to ci_22: 6 - x_12 + x_9 >= 0;
subject to ci_23: 7 + x_15 - x_12 >= 0;
subject to ci_24: 6 - x_15 + x_12 >= 0;
subject to ci_25: x_1 + x_2 + x_3 - 60 >= 0;
subject to ci_26: x_4 + x_5 + x_6 - 50 >= 0;
subject to ci_27: x_7 + x_8 + x_9 - 70 >= 0;
subject to ci_28: x_10 + x_11 + x_12 - 85 >= 0;
subject to ci_29: x_13 + x_14 + x_15 - 100 >= 0;
solve;
display x_1;
display x_2;
display x_3;
display x_4;
display x_5;
display x_6;
display x_7;
display x_8;
display x_9;
display x_10;
display x_11;
display x_12;
display x_13;
display x_14;
display x_15;
display myminfun;
display zmyabsdevmax;
display zmyreldevmax;
# End Model
