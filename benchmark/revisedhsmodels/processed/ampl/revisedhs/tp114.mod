# Model tp114
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
param a := .99;
param b := .9;
var x_1 >= .00001, <= 2000;
let x_1 := 1745;
var x_2 >= .00001, <= 16000;
let x_2 := 12000;
var x_3 >= .00001, <= 120;
let x_3 := 110;
var x_4 >= .00001, <= 5000;
let x_4 := 3048;
var x_5 >= .00001, <= 2000;
let x_5 := 1974;
var x_6 >= 85, <= 93;
let x_6 := 89.2;
var x_7 >= 90, <= 95;
let x_7 := 92.8;
var x_8 >= 3, <= 12;
let x_8 := 8;
var x_9 >= 1.2, <= 4;
let x_9 := 3.6;
var x_10 >= 145, <= 162;
let x_10 := 145;
var g_1 = 35.82 - .222*x_10 - b*x_9;
var g_2 = (-133) + 3*x_7 - a*x_10;
var g_3 = (-1)*g_1 + x_9*(1/b - b);
var g_4 = (-1)*g_2 + (1/a - a)*x_10;
var g_5 = 1.12*x_1 + .13167*x_1*x_8 - .00667*x_1*x_8^2 - a*x_4;
var g_6 = 57.425 + 1.098*x_8 - .038*x_8^2 + .325*x_6 - a*x_7;
var g_7 = (-1)*g_5 + (1/a - a)*x_4;
var g_8 = (-1)*g_6 + (1/a - a)*x_7;
var g_9 = 1.22*x_4 - x_1 - x_5;
var g_10 = 98000*x_3/(x_4*x_9 + 1000*x_3) - x_6;
var g_11 = (x_2 + x_5)/x_1 - x_8;
var mf = 5.04*x_1 + .035*x_2 + 10*x_3 + 3.36*x_5 - .063*x_4*x_7;
var myminfun = mf;
var myabsdevnod0_0 = abs(myminfun + 1768.806963716244);
var myreldevnod0_0 = abs(myminfun/1768.806963716244 + 1);
var myabsdevnod0_1 = abs(x_1 - 1698.094765188968);
var myreldevnod0_1 = abs(x_1/1698.094765188968 - 1);
var myabsdevnod0_2 = abs(x_2 - 15818.61492418296);
var myreldevnod0_2 = abs(x_2/15818.61492418296 - 1);
var myabsdevnod0_3 = abs(x_3 - 54.10268233324735);
var myreldevnod0_3 = abs(x_3/54.10268233324735 - 1);
var myabsdevnod0_4 = abs(x_4 - 3031.225217368007);
var myreldevnod0_4 = abs(x_4/3031.225217368007 - 1);
var myabsdevnod0_5 = abs(x_5 - 2000);
var myreldevnod0_5 = abs(x_5/2000 - 1);
var myabsdevnod0_6 = abs(x_6 - 90.11542219898668);
var myreldevnod0_6 = abs(x_6/90.11542219898668 - 1);
var myabsdevnod0_7 = abs(x_7 - 95);
var myreldevnod0_7 = abs(x_7/95 - 1);
var myabsdevnod0_8 = abs(x_8 - 10.49329830670555);
var myreldevnod0_8 = abs(x_8/10.49329830670555 - 1);
var myabsdevnod0_9 = abs(x_9 - 1.561636363636364);
var myreldevnod0_9 = abs(x_9/1.561636363636364 - 1);
var myabsdevnod0_10 = abs(x_10 - 153.5353535353535);
var myreldevnod0_10 = abs(x_10/153.5353535353535 - 1);
var myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1));
var myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1));
var myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3));
var myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3));
var myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5));
var myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5));
var myabsdevnod1_6 = (1/2)*(abs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7));
var myreldevnod1_6 = (1/2)*(abs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7));
var myabsdevnod1_8 = (1/2)*(abs(myabsdevnod0_8 - myabsdevnod0_9) + (myabsdevnod0_8 + myabsdevnod0_9));
var myreldevnod1_8 = (1/2)*(abs(myreldevnod0_8 - myreldevnod0_9) + (myreldevnod0_8 + myreldevnod0_9));
var myabsdevnod1_10 = myabsdevnod0_10;
var myreldevnod1_10 = myreldevnod0_10;
var myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2));
var myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2));
var myabsdevnod2_4 = (1/2)*(abs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6));
var myreldevnod2_4 = (1/2)*(abs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6));
var myabsdevnod2_8 = (1/2)*(abs(myabsdevnod1_8 - myabsdevnod1_10) + (myabsdevnod1_8 + myabsdevnod1_10));
var myreldevnod2_8 = (1/2)*(abs(myreldevnod1_8 - myreldevnod1_10) + (myreldevnod1_8 + myreldevnod1_10));
var myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4));
var myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4));
var myabsdevnod3_8 = myabsdevnod2_8;
var myreldevnod3_8 = myreldevnod2_8;
var myabsdevnod4_0 = (1/2)*(abs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8));
var myreldevnod4_0 = (1/2)*(abs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8));
var zmyabsdevmax = myabsdevnod4_0;
var zmyreldevmax = myreldevnod4_0;
minimize obj: myminfun;
subject to ce_1: g_9 = 0;
subject to ce_2: g_10 = 0;
subject to ce_3: g_11 = 0;
subject to ci_1: g_1 >= 0;
subject to ci_2: g_2 >= 0;
subject to ci_3: g_3 >= 0;
subject to ci_4: g_4 >= 0;
subject to ci_5: g_5 >= 0;
subject to ci_6: g_6 >= 0;
subject to ci_7: g_7 >= 0;
subject to ci_8: g_8 >= 0;
solve;
display x_1;
display x_2;
display x_3;
display x_4;
display x_5;
display x_6;
display x_7;
display x_8;
display x_9;
display x_10;
display myminfun;
display zmyabsdevmax;
display zmyreldevmax;
# End Model
