# Model tp056r
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
param mypi := 4*atan(1);
param c7 := 7;
param c42 := 42;
param c72 := 72;
param a := asin(sqrt(10/c42));
param b := asin(sqrt(50/c72));
param c := asin(sqrt(4/c7));
param d := asin(sqrt(2/c7));
param e := mypi/2;
param eps := 10^(-6);
var x_1;
let x_1 := 1;
var x_2;
let x_2 := 1;
var x_3;
let x_3 := 1;
var x_4 >= eps, <= e;
let x_4 := a;
var x_5 >= eps, <= e;
let x_5 := a;
var x_6 >= eps, <= e;
let x_6 := a;
var x_7 >= eps, <= e;
let x_7 := b;
var myminfun = (-1)*x_1*x_2*x_3;
var myabsdevnod0_0 = abs(myminfun + 3.456);
var myreldevnod0_0 = abs(myminfun/3.456 + 1);
var myabsdevnod0_1 = abs(x_1 - 2.4);
var myreldevnod0_1 = abs(x_1/2.4 - 1);
var myabsdevnod0_2 = abs(x_2 - 1.2);
var myreldevnod0_2 = abs(x_2/1.2 - 1);
var myabsdevnod0_3 = abs(x_3 - 1.2);
var myreldevnod0_3 = abs(x_3/1.2 - 1);
var myabsdevnod0_4 = abs(x_4 - 0.857071947850131);
var myreldevnod0_4 = abs(x_4/0.857071947850131 - 1);
var myabsdevnod0_5 = abs(x_5 - 0.5639426413606288);
var myreldevnod0_5 = abs(x_5/0.5639426413606288 - 1);
var myabsdevnod0_6 = abs(x_6 - 0.5639426413606288);
var myreldevnod0_6 = abs(x_6/0.5639426413606288 - 1);
var myabsdevnod0_7 = abs(x_7 - 1.570796326794897);
var myreldevnod0_7 = abs(x_7/1.570796326794897 - 1);
var myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1));
var myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1));
var myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3));
var myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3));
var myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5));
var myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5));
var myabsdevnod1_6 = (1/2)*(abs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7));
var myreldevnod1_6 = (1/2)*(abs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7));
var myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2));
var myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2));
var myabsdevnod2_4 = (1/2)*(abs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6));
var myreldevnod2_4 = (1/2)*(abs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6));
var myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4));
var myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4));
var zmyabsdevmax = myabsdevnod3_0;
var zmyreldevmax = myreldevnod3_0;
minimize obj: myminfun;
subject to ce_1: x_1 - 4.2*sin(x_4)^2 = 0;
subject to ce_2: x_2 - 4.2*sin(x_5)^2 = 0;
subject to ce_3: x_3 - 4.2*sin(x_6)^2 = 0;
subject to ce_4: x_1 + 2*x_2 + 2*x_3 - 7.2*sin(x_7)^2 = 0;
solve;
display x_1;
display x_2;
display x_3;
display x_4;
display x_5;
display x_6;
display x_7;
display myminfun;
display zmyabsdevmax;
display zmyreldevmax;
# End Model
