# Model tp104
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
var x_1 >= .1, <= 10;
let x_1 := 6;
var x_2 >= .1, <= 10;
let x_2 := 3;
var x_3 >= .1, <= 10;
let x_3 := .4;
var x_4 >= .1, <= 10;
let x_4 := .2;
var x_5 >= .1, <= 10;
let x_5 := 6;
var x_6 >= .1, <= 10;
let x_6 := 6;
var x_7 >= .1, <= 10;
let x_7 := 1;
var x_8 >= .1, <= 10;
let x_8 := .5;
var c_1 = 1 - .0588*x_5*x_7 - .1*x_1;
var c_2 = 1 - .0588*x_6*x_8 - .1*x_1 - .1*x_2;
var c_3 = 1 - 4*x_3/x_5 - 2/(x_3^.71*x_5) - .0588*x_7/x_3^1.3;
var c_4 = 1 - 4*x_4/x_6 - 2/(x_4^.71*x_6) - .0588*x_8/x_4^1.3;
var mf = .4*(x_1/x_7)^.67 + .4*(x_2/x_8)^.67 + 10 - x_1 - x_2;
var c_5 = mf - 1;
var c_6 = 4.2 - mf;
var myminfun = mf;
var myabsdevnod0_0 = abs(myminfun - 3.951163440103356);
var myreldevnod0_0 = abs(myminfun/3.951163440103356 - 1);
var myabsdevnod0_1 = abs(x_1 - 6.465114028369101);
var myreldevnod0_1 = abs(x_1/6.465114028369101 - 1);
var myabsdevnod0_2 = abs(x_2 - 2.232708647985228);
var myreldevnod0_2 = abs(x_2/2.232708647985228 - 1);
var myabsdevnod0_3 = abs(x_3 - 0.6673974912866293);
var myreldevnod0_3 = abs(x_3/0.6673974912866293 - 1);
var myabsdevnod0_4 = abs(x_4 - 0.595756422900371);
var myreldevnod0_4 = abs(x_4/0.595756422900371 - 1);
var myabsdevnod0_5 = abs(x_5 - 5.932675677909848);
var myreldevnod0_5 = abs(x_5/5.932675677909848 - 1);
var myabsdevnod0_6 = abs(x_6 - 5.527234564976939);
var myreldevnod0_6 = abs(x_6/5.527234564976939 - 1);
var myabsdevnod0_7 = abs(x_7 - 1.013322008902561);
var myreldevnod0_7 = abs(x_7/1.013322008902561 - 1);
var myabsdevnod0_8 = abs(x_8 - 0.400668229125703);
var myreldevnod0_8 = abs(x_8/0.400668229125703 - 1);
var myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1));
var myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1));
var myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3));
var myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3));
var myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5));
var myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5));
var myabsdevnod1_6 = (1/2)*(abs(myabsdevnod0_6 - myabsdevnod0_7) + (myabsdevnod0_6 + myabsdevnod0_7));
var myreldevnod1_6 = (1/2)*(abs(myreldevnod0_6 - myreldevnod0_7) + (myreldevnod0_6 + myreldevnod0_7));
var myabsdevnod1_8 = myabsdevnod0_8;
var myreldevnod1_8 = myreldevnod0_8;
var myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2));
var myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2));
var myabsdevnod2_4 = (1/2)*(abs(myabsdevnod1_4 - myabsdevnod1_6) + (myabsdevnod1_4 + myabsdevnod1_6));
var myreldevnod2_4 = (1/2)*(abs(myreldevnod1_4 - myreldevnod1_6) + (myreldevnod1_4 + myreldevnod1_6));
var myabsdevnod2_8 = myabsdevnod1_8;
var myreldevnod2_8 = myreldevnod1_8;
var myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4));
var myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4));
var myabsdevnod3_8 = myabsdevnod2_8;
var myreldevnod3_8 = myreldevnod2_8;
var myabsdevnod4_0 = (1/2)*(abs(myabsdevnod3_0 - myabsdevnod3_8) + (myabsdevnod3_0 + myabsdevnod3_8));
var myreldevnod4_0 = (1/2)*(abs(myreldevnod3_0 - myreldevnod3_8) + (myreldevnod3_0 + myreldevnod3_8));
var zmyabsdevmax = myabsdevnod4_0;
var zmyreldevmax = myreldevnod4_0;
minimize obj: myminfun;
subject to ci_1: c_1 >= 0;
subject to ci_2: c_2 >= 0;
subject to ci_3: c_3 >= 0;
subject to ci_4: c_4 >= 0;
subject to ci_5: c_5 >= 0;
subject to ci_6: c_6 >= 0;
solve;
display x_1;
display x_2;
display x_3;
display x_4;
display x_5;
display x_6;
display x_7;
display x_8;
display myminfun;
display zmyabsdevmax;
display zmyreldevmax;
# End Model
