# Model tp083
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
param a_1 := 85.334407;
param a_2 := 0.0056858;
param a_3 := 0.0006262;
param a_4 := 0.0022053;
param a_5 := 80.51249;
param a_6 := 0.0071317;
param a_7 := 0.0029955;
param a_8 := 0.0021813;
param a_9 := 9.300961;
param a_10 := 0.0047026;
param a_11 := 0.0012547;
param a_12 := 0.0019085;
var x_1 >= 78, <= 102;
let x_1 := 78;
var x_2 >= 33, <= 45;
let x_2 := 33;
var x_3 >= 27, <= 45;
let x_3 := 27;
var x_4 >= 27, <= 45;
let x_4 := 27;
var x_5 >= 27, <= 45;
let x_5 := 27;
var t_1 = a_1 + a_2*x_2*x_5 + a_3*x_1*x_4 - a_4*x_3*x_5;
var t_2 = a_5 + a_6*x_2*x_5 + a_7*x_1*x_2 + a_8*x_3^2 - 90;
var t_3 = a_9 + a_10*x_3*x_5 + a_11*x_1*x_3 + a_12*x_3*x_4 - 20;
var myminfun = 5.3578547*x_3^2 + 0.8356891*x_1*x_5 + 37.293239*x_1 - 40792.141;
var myabsdevnod0_0 = abs(myminfun + 30665.53867178332);
var myreldevnod0_0 = abs(myminfun/30665.53867178332 + 1);
var myabsdevnod0_1 = abs(x_1 - 78);
var myreldevnod0_1 = abs(x_1/78 - 1);
var myabsdevnod0_2 = abs(x_2 - 33);
var myreldevnod0_2 = abs(x_2/33 - 1);
var myabsdevnod0_3 = abs(x_3 - 29.9952560256816);
var myreldevnod0_3 = abs(x_3/29.9952560256816 - 1);
var myabsdevnod0_4 = abs(x_4 - 45);
var myreldevnod0_4 = abs(x_4/45 - 1);
var myabsdevnod0_5 = abs(x_5 - 36.7758129057882);
var myreldevnod0_5 = abs(x_5/36.7758129057882 - 1);
var myabsdevnod1_0 = (1/2)*(abs(myabsdevnod0_0 - myabsdevnod0_1) + (myabsdevnod0_0 + myabsdevnod0_1));
var myreldevnod1_0 = (1/2)*(abs(myreldevnod0_0 - myreldevnod0_1) + (myreldevnod0_0 + myreldevnod0_1));
var myabsdevnod1_2 = (1/2)*(abs(myabsdevnod0_2 - myabsdevnod0_3) + (myabsdevnod0_2 + myabsdevnod0_3));
var myreldevnod1_2 = (1/2)*(abs(myreldevnod0_2 - myreldevnod0_3) + (myreldevnod0_2 + myreldevnod0_3));
var myabsdevnod1_4 = (1/2)*(abs(myabsdevnod0_4 - myabsdevnod0_5) + (myabsdevnod0_4 + myabsdevnod0_5));
var myreldevnod1_4 = (1/2)*(abs(myreldevnod0_4 - myreldevnod0_5) + (myreldevnod0_4 + myreldevnod0_5));
var myabsdevnod2_0 = (1/2)*(abs(myabsdevnod1_0 - myabsdevnod1_2) + (myabsdevnod1_0 + myabsdevnod1_2));
var myreldevnod2_0 = (1/2)*(abs(myreldevnod1_0 - myreldevnod1_2) + (myreldevnod1_0 + myreldevnod1_2));
var myabsdevnod2_4 = myabsdevnod1_4;
var myreldevnod2_4 = myreldevnod1_4;
var myabsdevnod3_0 = (1/2)*(abs(myabsdevnod2_0 - myabsdevnod2_4) + (myabsdevnod2_0 + myabsdevnod2_4));
var myreldevnod3_0 = (1/2)*(abs(myreldevnod2_0 - myreldevnod2_4) + (myreldevnod2_0 + myreldevnod2_4));
var zmyabsdevmax = myabsdevnod3_0;
var zmyreldevmax = myreldevnod3_0;
minimize obj: myminfun;
subject to ci_1: t_1 >= 0;
subject to ci_2: 92 - t_1 >= 0;
subject to ci_3: t_2 >= 0;
subject to ci_4: 20 - t_2 >= 0;
subject to ci_5: t_3 >= 0;
subject to ci_6: 5 - t_3 >= 0;
solve;
display x_1;
display x_2;
display x_3;
display x_4;
display x_5;
display myminfun;
display zmyabsdevmax;
display zmyreldevmax;
# End Model
