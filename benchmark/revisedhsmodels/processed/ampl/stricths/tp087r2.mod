# Model tp087r2
# Source version 7
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
param bv1 := 1.48477;
param bv2 := 1.48577;
param bv := bv1;
param ubx5hsv1 := 1000;
param ubx5hsv2 := 10000;
param ubx5hsv := ubx5hsv1;
param a := 131.078;
param b := bv;
param c := 0.90798;
param arg := 1.47588;
param d := cos(arg);
param e := sin(arg);
param ivx5hs := 198.175;
param lbx5hs := -1000;
param lbx5r := -18;
param lbx5 := lbx5hs;
param ubx5hs := ubx5hsv;
param ubx5r := -10.7;
param ubx5 := ubx5hs;
param ivx5 := (1/2)*(ivx5hs + ubx5 - abs(ivx5hs - ubx5));
param sign1_0 := 1;
param sign1_2 := -1;
param sign2_0 := 1;
param sign2_3 := -1;
var x_1 >= 0, <= 400;
let x_1 := 390;
var x_2 >= 0, <= 1000;
let x_2 := 1000;
var x_3 >= 340, <= 420;
let x_3 := 419.5;
var x_4 >= 340, <= 420;
let x_4 := 340.5;
var x_5 >= lbx5, <= ubx5;
let x_5 := ivx5;
var x_6 >= 0, <= 0.5236;
let x_6 := 0.5;
var x_7 >= 0, <= 300;
let x_7 := 0;
var x_8 >= 0, <= 300;
let x_8 := 90;
var x_9 >= 0, <= 900;
let x_9 := 0;
var x_10 >= 0, <= 900;
let x_10 := 900;
var x_11 >= 0, <= 800;
let x_11 := 0;
var x_12 >= 0, <= 800;
let x_12 := 800;
var x_13 >= -1, <= 1;
let x_13 := 1;
var x_14 >= -1, <= 1;
let x_14 := 1;
var x_15 >= -1, <= 1;
let x_15 := 1;
var cons_1 = 300 - x_1 - x_3*x_4*cos(b - x_6)/a + c*d*x_3^2/a;
var cons_2 = (-1)*x_2 - x_3*x_4*cos(b + x_6)/a + c*d*x_4^2/a;
var cons_3 = (-1)*x_5 - x_3*x_4*sin(b + x_6)/a + c*e*x_4^2/a;
var cons_4 = 200 - x_3*x_4*sin(b - x_6)/a + c*e*x_3^2/a;
var comp1_1 = x_1 - 300;
var comp2_1 = x_2 - 100;
var comp2_2 = x_2 - 200;
var comp1nnxa_1 = x_7;
var comp1nnxb_1 = x_8;
var comp2nnxa_1 = x_9;
var comp2nnxb_1 = x_10;
var comp2nnxa_2 = x_11;
var comp2nnxb_2 = x_12;
var cons_5 = comp1_1 + comp1nnxa_1 - comp1nnxb_1;
var cons_6 = comp2_1 + comp2nnxa_1 - comp2nnxb_1;
var cons_7 = comp2_2 + comp2nnxa_2 - comp2nnxb_2;
var comp1abs_1 = comp1nnxa_1 + comp1nnxb_1;
var comp2abs_1 = comp2nnxa_1 + comp2nnxb_1;
var comp2abs_2 = comp2nnxa_2 + comp2nnxb_2;
var sign1_1 = x_13;
var sign2_1 = x_14;
var sign2_2 = x_15;
var cons_8 = sign1_1*comp1abs_1 - comp1_1;
var cons_9 = sign2_1*comp2abs_1 - comp2_1;
var cons_10 = sign2_2*comp2abs_2 - comp2_2;
var step1_1 = (1 + sign1_0)*(1 - sign1_1)/4;
var step1_2 = (1 + sign1_1)*(1 - sign1_2)/4;
var step2_1 = (1 + sign2_0)*(1 - sign2_1)/4;
var step2_2 = (1 + sign2_1)*(1 - sign2_2)/4;
var step2_3 = (1 + sign2_2)*(1 - sign2_3)/4;
var f1_1 = 30*x_1;
var f1_2 = 31*x_1;
var f2_1 = 28*x_2;
var f2_2 = 29*x_2;
var f2_3 = 30*x_2;
var f1comb_1 = f1_1*step1_1;
var f1comb_2 = f1comb_1 + comp1nnxa_1*comp1nnxb_1 + f1_2*step1_2;
var f2comb_1 = f2_1*step2_1;
var f2comb_2 = f2comb_1 + comp2nnxa_1*comp2nnxb_1 + f2_2*step2_2;
var f2comb_3 = f2comb_2 + comp2nnxa_2*comp2nnxb_2 + f2_3*step2_3;
var mf = f1comb_2 + f2comb_3;
minimize obj: mf;
subject to ce_1: cons_1 = 0;
subject to ce_2: cons_2 = 0;
subject to ce_3: cons_3 = 0;
subject to ce_4: cons_4 = 0;
subject to ce_5: cons_5 = 0;
subject to ce_6: cons_6 = 0;
subject to ce_7: cons_7 = 0;
subject to ce_8: cons_8 = 0;
subject to ce_9: cons_9 = 0;
subject to ce_10: cons_10 = 0;
solve;
display obj;
# End Model
