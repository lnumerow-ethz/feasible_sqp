# Model tp086
# Source version 1
# Simple APM canonicalizer version 1.3
# AMPL back end version 1.1
param a24a := 0.4;
param a24b := 4;
param a24 := a24a;
param a_1_1 := -16;
param a_1_2 := 2;
param a_1_3 := 0;
param a_1_4 := 1;
param a_1_5 := 0;
param a_2_1 := 0;
param a_2_2 := -2;
param a_2_3 := 0;
param a_2_4 := a24;
param a_2_5 := 2;
param a_3_1 := -3.5;
param a_3_2 := 0;
param a_3_3 := 2;
param a_3_4 := 0;
param a_3_5 := 0;
param a_4_1 := 0;
param a_4_2 := -2;
param a_4_3 := 0;
param a_4_4 := -4;
param a_4_5 := -1;
param a_5_1 := 0;
param a_5_2 := -9;
param a_5_3 := -2;
param a_5_4 := 1;
param a_5_5 := -2.8;
param a_6_1 := 2;
param a_6_2 := 0;
param a_6_3 := -4;
param a_6_4 := 0;
param a_6_5 := 0;
param a_7_1 := -1;
param a_7_2 := -1;
param a_7_3 := -1;
param a_7_4 := -1;
param a_7_5 := -1;
param a_8_1 := -1;
param a_8_2 := -2;
param a_8_3 := -3;
param a_8_4 := -2;
param a_8_5 := -1;
param a_9_1 := 1;
param a_9_2 := 2;
param a_9_3 := 3;
param a_9_4 := 4;
param a_9_5 := 5;
param a_10_1 := 1;
param a_10_2 := 1;
param a_10_3 := 1;
param a_10_4 := 1;
param a_10_5 := 1;
param b_1 := -40;
param b_2 := -2;
param b_3 := -0.25;
param b_4 := -4;
param b_5 := -4;
param b_6 := -1;
param b_7 := -40;
param b_8 := -60;
param b_9 := 5;
param b_10 := 1;
param c_1_1 := 30;
param c_1_2 := -20;
param c_1_3 := -10;
param c_1_4 := 32;
param c_1_5 := -10;
param c_2_1 := -20;
param c_2_2 := 39;
param c_2_3 := -6;
param c_2_4 := -31;
param c_2_5 := 32;
param c_3_1 := -10;
param c_3_2 := -6;
param c_3_3 := 10;
param c_3_4 := -6;
param c_3_5 := -10;
param c_4_1 := 32;
param c_4_2 := -31;
param c_4_3 := -6;
param c_4_4 := 39;
param c_4_5 := -20;
param c_5_1 := -10;
param c_5_2 := 32;
param c_5_3 := -10;
param c_5_4 := -20;
param c_5_5 := 30;
param d_1 := 4;
param d_2 := 8;
param d_3 := 10;
param d_4 := 6;
param d_5 := 2;
param e_1 := -15;
param e_2 := -27;
param e_3 := -36;
param e_4 := -18;
param e_5 := -12;
param sumax_1_0 := 0;
param sumax_2_0 := 0;
param sumax_3_0 := 0;
param sumax_4_0 := 0;
param sumax_5_0 := 0;
param sumax_6_0 := 0;
param sumax_7_0 := 0;
param sumax_8_0 := 0;
param sumax_9_0 := 0;
param sumax_10_0 := 0;
param sumex_0 := 0;
param sumcxxi_1_0 := 0;
param sumcxxi_2_0 := 0;
param sumcxxi_3_0 := 0;
param sumcxxi_4_0 := 0;
param sumcxxi_5_0 := 0;
param sumcxx_0 := 0;
param sumdx_0 := 0;
var x_1 >= 0;
let x_1 := 0;
var x_2 >= 0;
let x_2 := 0;
var x_3 >= 0;
let x_3 := 0;
var x_4 >= 0;
let x_4 := 0;
var x_5 >= 0;
let x_5 := 1;
var sumax_1_1 = sumax_1_0 + a_1_1*x_1;
var sumax_1_2 = sumax_1_1 + a_1_2*x_2;
var sumax_1_3 = sumax_1_2 + a_1_3*x_3;
var sumax_1_4 = sumax_1_3 + a_1_4*x_4;
var sumax_1_5 = sumax_1_4 + a_1_5*x_5;
var sumax_2_1 = sumax_2_0 + a_2_1*x_1;
var sumax_2_2 = sumax_2_1 + a_2_2*x_2;
var sumax_2_3 = sumax_2_2 + a_2_3*x_3;
var sumax_2_4 = sumax_2_3 + a_2_4*x_4;
var sumax_2_5 = sumax_2_4 + a_2_5*x_5;
var sumax_3_1 = sumax_3_0 + a_3_1*x_1;
var sumax_3_2 = sumax_3_1 + a_3_2*x_2;
var sumax_3_3 = sumax_3_2 + a_3_3*x_3;
var sumax_3_4 = sumax_3_3 + a_3_4*x_4;
var sumax_3_5 = sumax_3_4 + a_3_5*x_5;
var sumax_4_1 = sumax_4_0 + a_4_1*x_1;
var sumax_4_2 = sumax_4_1 + a_4_2*x_2;
var sumax_4_3 = sumax_4_2 + a_4_3*x_3;
var sumax_4_4 = sumax_4_3 + a_4_4*x_4;
var sumax_4_5 = sumax_4_4 + a_4_5*x_5;
var sumax_5_1 = sumax_5_0 + a_5_1*x_1;
var sumax_5_2 = sumax_5_1 + a_5_2*x_2;
var sumax_5_3 = sumax_5_2 + a_5_3*x_3;
var sumax_5_4 = sumax_5_3 + a_5_4*x_4;
var sumax_5_5 = sumax_5_4 + a_5_5*x_5;
var sumax_6_1 = sumax_6_0 + a_6_1*x_1;
var sumax_6_2 = sumax_6_1 + a_6_2*x_2;
var sumax_6_3 = sumax_6_2 + a_6_3*x_3;
var sumax_6_4 = sumax_6_3 + a_6_4*x_4;
var sumax_6_5 = sumax_6_4 + a_6_5*x_5;
var sumax_7_1 = sumax_7_0 + a_7_1*x_1;
var sumax_7_2 = sumax_7_1 + a_7_2*x_2;
var sumax_7_3 = sumax_7_2 + a_7_3*x_3;
var sumax_7_4 = sumax_7_3 + a_7_4*x_4;
var sumax_7_5 = sumax_7_4 + a_7_5*x_5;
var sumax_8_1 = sumax_8_0 + a_8_1*x_1;
var sumax_8_2 = sumax_8_1 + a_8_2*x_2;
var sumax_8_3 = sumax_8_2 + a_8_3*x_3;
var sumax_8_4 = sumax_8_3 + a_8_4*x_4;
var sumax_8_5 = sumax_8_4 + a_8_5*x_5;
var sumax_9_1 = sumax_9_0 + a_9_1*x_1;
var sumax_9_2 = sumax_9_1 + a_9_2*x_2;
var sumax_9_3 = sumax_9_2 + a_9_3*x_3;
var sumax_9_4 = sumax_9_3 + a_9_4*x_4;
var sumax_9_5 = sumax_9_4 + a_9_5*x_5;
var sumax_10_1 = sumax_10_0 + a_10_1*x_1;
var sumax_10_2 = sumax_10_1 + a_10_2*x_2;
var sumax_10_3 = sumax_10_2 + a_10_3*x_3;
var sumax_10_4 = sumax_10_3 + a_10_4*x_4;
var sumax_10_5 = sumax_10_4 + a_10_5*x_5;
var ineq_1 = sumax_1_5 - b_1;
var ineq_2 = sumax_2_5 - b_2;
var ineq_3 = sumax_3_5 - b_3;
var ineq_4 = sumax_4_5 - b_4;
var ineq_5 = sumax_5_5 - b_5;
var ineq_6 = sumax_6_5 - b_6;
var ineq_7 = sumax_7_5 - b_7;
var ineq_8 = sumax_8_5 - b_8;
var ineq_9 = sumax_9_5 - b_9;
var ineq_10 = sumax_10_5 - b_10;
var sumex_1 = sumex_0 + e_1*x_1;
var sumex_2 = sumex_1 + e_2*x_2;
var sumex_3 = sumex_2 + e_3*x_3;
var sumex_4 = sumex_3 + e_4*x_4;
var sumex_5 = sumex_4 + e_5*x_5;
var sumcxxi_1_1 = sumcxxi_1_0 + c_1_1*x_1*x_1;
var sumcxxi_1_2 = sumcxxi_1_1 + c_1_2*x_1*x_2;
var sumcxxi_1_3 = sumcxxi_1_2 + c_1_3*x_1*x_3;
var sumcxxi_1_4 = sumcxxi_1_3 + c_1_4*x_1*x_4;
var sumcxxi_1_5 = sumcxxi_1_4 + c_1_5*x_1*x_5;
var sumcxxi_2_1 = sumcxxi_2_0 + c_2_1*x_2*x_1;
var sumcxxi_2_2 = sumcxxi_2_1 + c_2_2*x_2*x_2;
var sumcxxi_2_3 = sumcxxi_2_2 + c_2_3*x_2*x_3;
var sumcxxi_2_4 = sumcxxi_2_3 + c_2_4*x_2*x_4;
var sumcxxi_2_5 = sumcxxi_2_4 + c_2_5*x_2*x_5;
var sumcxxi_3_1 = sumcxxi_3_0 + c_3_1*x_3*x_1;
var sumcxxi_3_2 = sumcxxi_3_1 + c_3_2*x_3*x_2;
var sumcxxi_3_3 = sumcxxi_3_2 + c_3_3*x_3*x_3;
var sumcxxi_3_4 = sumcxxi_3_3 + c_3_4*x_3*x_4;
var sumcxxi_3_5 = sumcxxi_3_4 + c_3_5*x_3*x_5;
var sumcxxi_4_1 = sumcxxi_4_0 + c_4_1*x_4*x_1;
var sumcxxi_4_2 = sumcxxi_4_1 + c_4_2*x_4*x_2;
var sumcxxi_4_3 = sumcxxi_4_2 + c_4_3*x_4*x_3;
var sumcxxi_4_4 = sumcxxi_4_3 + c_4_4*x_4*x_4;
var sumcxxi_4_5 = sumcxxi_4_4 + c_4_5*x_4*x_5;
var sumcxxi_5_1 = sumcxxi_5_0 + c_5_1*x_5*x_1;
var sumcxxi_5_2 = sumcxxi_5_1 + c_5_2*x_5*x_2;
var sumcxxi_5_3 = sumcxxi_5_2 + c_5_3*x_5*x_3;
var sumcxxi_5_4 = sumcxxi_5_3 + c_5_4*x_5*x_4;
var sumcxxi_5_5 = sumcxxi_5_4 + c_5_5*x_5*x_5;
var sumcxx_1 = sumcxx_0 + sumcxxi_1_5;
var sumcxx_2 = sumcxx_1 + sumcxxi_2_5;
var sumcxx_3 = sumcxx_2 + sumcxxi_3_5;
var sumcxx_4 = sumcxx_3 + sumcxxi_4_5;
var sumcxx_5 = sumcxx_4 + sumcxxi_5_5;
var sumdx_1 = sumdx_0 + d_1*x_1^3;
var sumdx_2 = sumdx_1 + d_2*x_2^3;
var sumdx_3 = sumdx_2 + d_3*x_3^3;
var sumdx_4 = sumdx_3 + d_4*x_4^3;
var sumdx_5 = sumdx_4 + d_5*x_5^3;
var mf = sumex_5 + sumcxx_5 + sumdx_5;
minimize obj: mf;
subject to ci_1: ineq_1 >= 0;
subject to ci_2: ineq_2 >= 0;
subject to ci_3: ineq_3 >= 0;
subject to ci_4: ineq_4 >= 0;
subject to ci_5: ineq_5 >= 0;
subject to ci_6: ineq_6 >= 0;
subject to ci_7: ineq_7 >= 0;
subject to ci_8: ineq_8 >= 0;
subject to ci_9: ineq_9 >= 0;
subject to ci_10: ineq_10 >= 0;
solve;
display obj;
# End Model
