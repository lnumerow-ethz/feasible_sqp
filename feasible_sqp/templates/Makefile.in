QPOASES_ROOT_DIR =  {{ build_params.qpoases_root }}
CASADI_ROOT_DIR  =  {{ build_params.casadi_root }}

QPOASES_LIB_DIR = ${QPOASES_ROOT_DIR}/bin
CASADI_LIB_DIR = ${QPOASES_ROOT_DIR}/installation/lib

##
##	flags
##

IFLAGS      =  -I. \
               -I${QPOASES_ROOT_DIR}/include \
			   -I${CASADI_ROOT_DIR}/installation/include

OUTPUT_DIR = .

CPPFLAGS += -std=c++11 -g -fPIC

##
##	targets
##

qpoases: 
	cd ${QPOASES_ROOT_DIR}; mkdir -p bin; make -j4 src

casadi: 
	cd ${CASADI_ROOT_DIR}; mkdir -p build; mkdir -p installation; cd build; cmake ..; make -j4; make install DESTDIR=../installation 

fsqp_solver:
	g++ ${CPPFLAGS} -c feasibleSQP.cpp ${IFLAGS}

fsqp_solver_shared: fsqp_solver
	g++ ${CPPFLAGS} -shared -o feasibleSQP.so feasibleSQP.o -lcasadi -lqpOASES -lca_dfdy -lca_g  -lca_dgdy -lca_dLdyy -L. -L${QPOASES_LIB_DIR} -L${CASADI_LIB_DIR}

all: qpoases casadi fsqp_solver 

clean_qpoases:
	@${ECHO} "Cleaning up qpOASES"
	cd ${QPOASES_ROOT_DIR}; make clean

clean_casadi:
	@${ECHO} "Cleaning up CasADi"
	cd ${QPOASES_ROOT_DIR}/build; make clean

clean_feasible_sqp:
	@${ECHO} "Cleaning up"
	@${RM} -f *.so *.o

clean: clean_qpoases clean_casadi clean_feasible_sqp

##
##	end of file
##
